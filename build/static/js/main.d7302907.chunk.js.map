{"version":3,"sources":["../node_modules/@ionic/core/dist/esm-es5 lazy /^/.*/.entry/.js$/ groupOptions: {} namespace object","../node_modules/ionicons/dist/esm-es5 lazy /^/.*/.entry/.js$/ include: /.entry/.js$/ exclude: /.system/.entry/.js$/ groupOptions: {} namespace object","UIListeners.ts","cards.ts","ClientApp.ts","charactermap.ts","Shared.tsx","components/Menu.tsx","pages/GamePage.tsx","pages/CardPage.tsx","pages/InteractionPage.tsx","pages/GameTab.tsx","pages/HelpPage.tsx","pages/Page.tsx","pages/PickCharacterPage.tsx","pages/LoginPage.tsx","pages/RoundComplete.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","keys","Object","module","exports","LVListener","listenerType","tag","name","callback","prevValueStr","this","EventHandler","events","listenerId","properties","listener","p","undefined","push","i","length","splice","value","property","valueStr","listeners","list","registerListenerToMap","removeListenerFromMap","LVListenerList","values","item","orderedCards","CardDetailsMapValue","numInDeck","shortAction","action","cardType","cardDetailsMapExport","tokensToWinMap","cardTypesExport","getCardType","card","addCardTypes","cardStr","count","init","totalNumberOfCards","getCardDetails","cardTypeStr","clientApp","pickedCharacterId","alreadyPickedIds","playerId","numPlayers","key","username","roomcode","websocket","playerDetails","gameState","loggedIn","roomSeed","prevUIData","hand","handIds","turnId","interaction","uiEventHandler","delayUiUpdates","gotoTab","targetId","playedCard","status","url","localStorage","window","getItem","Math","floor","random","setItem","String","Image","src","that","setProperties","buildUIValues","register","clean","uiValues","addProperty","prop","cb","getCardDiscardedCountArray","getAlreadyPickedCharacterIds","nextUIValue","JSON","stringify","propertyChange","parse","toUpperCase","getAlphaIndex","str","index","charCodeAt","WebSocket","onopen","onmessage","event","data","onclose","triggerEvent","updateUI","onerror","send","xhr","XMLHttpRequest","onload","response","room","open","setRequestHeader","characterId","selectedCharacterId","result","getCardDiscardedCount","j","total","discarded","jsonData","strData","prevInteractionStatus","cmd","addCard","pickup","state","wins","joinedPlayer","gotFullState","reveal","nextTurn","discard","newInteractionStatus","location","pathname","endsWith","setTimeout","intervalId","setInterval","clearInterval","players","player","playerStates","playerState","played","handCardId","target","guess","msg","prevGameState","gamestate","updatePlayerDetails","covertNumbersToCards","turn","otherCard","loserId","loser","revealedCard","swappedFor","swappedForCardId","prevCard","hiddenCard","finalCards","winnerIds","roundWinners","gameWinner","discardCard","cardId","expose","charactersMap","LVCard","props","className","highlight","children","InteractionCard","CardName","CardImgAndDetails","Fragment","alt","PlayerCharacterName","PlayerCharacter","imgPath","PlayerState","DotDotDot","timerID","tick","setState","counter","resultStr","React","Component","appPages","title","icon","caretForwardCircleOutline","helpCircleOutline","Menu","useLocation","history","useHistory","useState","getUiProperty","setLoggedIn","setRoom","setPlayerDetails","setPlayerId","useEffect","onPropertyChange","v","onEvent","effectListeners","contentId","type","lines","detail","slot","codeOutline","appPage","startsWith","routerLink","routerDirection","to","DiscardList","cards","Tokens","rng","Prando","seed","tokens","gemId","nextInt","hueRotate","rotate","gem","style","PlayerLine","dropdownOpen","onClick","hasDropdown","chevronUpOutline","chevronDownOutline","PlayersList","StartGameCard","allPicked","start","TopLine","roomCode","totalDiscards","discardedCardTotals","cardsLeft","GamePage","setDiscardedCardTotals","setGameState","setRoomSeed","setTurnId","fullscreen","PlayCard","playState","setPlayState","pickedTarget","setPickedTarget","waiting","setWaiting","handleBackClick","playCard","handId","disabled","anyValidTargets","targetList","targetPlayerDetails","guessCardType","CardPage","setHand","content","PlayerDiscard","PlayerEliminated","SecretReveal","InteractionContent","setInteraction","interactionBlock","turnPlayerDetails","hasTarget","waitingText","endTurn","otherDetails","interactionStep","winnerPlayerDetails","loserPlayerDetails","baronTurnPlayerCard","baronTargetPlayerCard","kingTurnPlayerCard","kingTargetPlayerCard","InteractionPage","GameTabPage","cardIcon","tabletPortraitOutline","isDead","exact","path","render","tab","href","accessibilityOutline","QuickHelpList","gotoSlideCb","handleClick","QuickHelpCard","HelpCardItems","HelpPage","slidesRef","useRef","handleGotoSlideCb","current","slideTo","ref","InputExamples","text","setText","number","setNumber","placeholder","onIonChange","clearInput","parseInt","readonly","position","PickCharacterElement","pickedCharacterCb","isAlreadyPicked","isSelected","isPicked","img","PickCharacterElements","characterImg","indexOf","PickCharacterPage","setSelectedCharacterId","setAlreadyPickedIds","setPickedCharacterId","pickDisabled","setPickDisabled","pickCharacter","clearPickedCharacter","LoginPage","setName","joiningRoom","setJoiningRoom","createRoomEnable","setCreateRoomEnable","joinRoomEnable","setJoinRoomEnable","showToast","setShowToast","maxlength","autocapitalize","joinRoom","createRoom","isOpen","onDidDismiss","message","duration","RoundEndPlayersListItem","finalCard","RoundEndPlayersList","WinnersCards","handleNewRound","RoundCompletePage","App","GameTab","component","from","Boolean","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"uKAAA,IAAIA,EAAM,CACT,8BAA+B,CAC9B,GACA,GAED,uBAAwB,CACvB,GACA,GAED,uBAAwB,CACvB,GACA,GAED,0BAA2B,CAC1B,GACA,IAED,6BAA8B,CAC7B,GACA,IAED,0BAA2B,CAC1B,GACA,IAED,0BAA2B,CAC1B,GACA,IAED,wBAAyB,CACxB,GACA,IAED,0BAA2B,CAC1B,GACA,IAED,sBAAuB,CACtB,GACA,IAED,uBAAwB,CACvB,GACA,IAED,4BAA6B,CAC5B,GACA,IAED,uBAAwB,CACvB,GACA,IAED,qBAAsB,CACrB,GACA,IAED,mCAAoC,CACnC,GACA,IAED,uBAAwB,CACvB,GACA,IAED,+BAAgC,CAC/B,GACA,IAED,wBAAyB,CACxB,IACA,IAED,yBAA0B,CACzB,IACA,IAED,wBAAyB,CACxB,IACA,IAED,uBAAwB,CACvB,IACA,GAED,uBAAwB,CACvB,IACA,IAED,yBAA0B,CACzB,IACA,GAED,8BAA+B,CAC9B,IACA,IAED,yBAA0B,CACzB,IACA,IAED,uBAAwB,CACvB,IACA,IAED,6BAA8B,CAC7B,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,+BAAgC,CAC/B,IACA,IAED,yBAA0B,CACzB,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,yBAA0B,CACzB,IACA,IAED,yBAA0B,CACzB,IACA,IAED,4BAA6B,CAC5B,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,uBAAwB,CACvB,IACA,IAED,sBAAuB,CACtB,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,uBAAwB,CACvB,IACA,IAED,wBAAyB,CACxB,IACA,IAED,gCAAiC,CAChC,IACA,KAGF,SAASC,EAAoBC,GAC5B,IAAIC,EAAoBC,EAAEJ,EAAKE,GAC9B,OAAOG,QAAQC,UAAUC,MAAK,WAC7B,IAAIC,EAAI,IAAIC,MAAM,uBAAyBP,EAAM,KAEjD,MADAM,EAAEE,KAAO,mBACHF,KAIR,IAAIG,EAAMX,EAAIE,GAAMU,EAAKD,EAAI,GAC7B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","file":"static/js/main.d7302907.chunk.js","sourcesContent":["var map = {\n\t\"./ion-action-sheet.entry.js\": [\n\t\t83,\n\t\t5\n\t],\n\t\"./ion-alert.entry.js\": [\n\t\t84,\n\t\t6\n\t],\n\t\"./ion-app_8.entry.js\": [\n\t\t85,\n\t\t7\n\t],\n\t\"./ion-avatar_3.entry.js\": [\n\t\t86,\n\t\t17\n\t],\n\t\"./ion-back-button.entry.js\": [\n\t\t87,\n\t\t18\n\t],\n\t\"./ion-backdrop.entry.js\": [\n\t\t88,\n\t\t43\n\t],\n\t\"./ion-button_2.entry.js\": [\n\t\t89,\n\t\t19\n\t],\n\t\"./ion-card_5.entry.js\": [\n\t\t90,\n\t\t20\n\t],\n\t\"./ion-checkbox.entry.js\": [\n\t\t91,\n\t\t21\n\t],\n\t\"./ion-chip.entry.js\": [\n\t\t92,\n\t\t22\n\t],\n\t\"./ion-col_3.entry.js\": [\n\t\t93,\n\t\t44\n\t],\n\t\"./ion-datetime_3.entry.js\": [\n\t\t94,\n\t\t10\n\t],\n\t\"./ion-fab_3.entry.js\": [\n\t\t95,\n\t\t23\n\t],\n\t\"./ion-img.entry.js\": [\n\t\t96,\n\t\t45\n\t],\n\t\"./ion-infinite-scroll_2.entry.js\": [\n\t\t97,\n\t\t46\n\t],\n\t\"./ion-input.entry.js\": [\n\t\t98,\n\t\t24\n\t],\n\t\"./ion-item-option_3.entry.js\": [\n\t\t99,\n\t\t25\n\t],\n\t\"./ion-item_8.entry.js\": [\n\t\t100,\n\t\t26\n\t],\n\t\"./ion-loading.entry.js\": [\n\t\t101,\n\t\t27\n\t],\n\t\"./ion-menu_3.entry.js\": [\n\t\t102,\n\t\t28\n\t],\n\t\"./ion-modal.entry.js\": [\n\t\t103,\n\t\t8\n\t],\n\t\"./ion-nav_2.entry.js\": [\n\t\t104,\n\t\t14\n\t],\n\t\"./ion-popover.entry.js\": [\n\t\t105,\n\t\t9\n\t],\n\t\"./ion-progress-bar.entry.js\": [\n\t\t106,\n\t\t29\n\t],\n\t\"./ion-radio_2.entry.js\": [\n\t\t107,\n\t\t30\n\t],\n\t\"./ion-range.entry.js\": [\n\t\t108,\n\t\t31\n\t],\n\t\"./ion-refresher_2.entry.js\": [\n\t\t109,\n\t\t11\n\t],\n\t\"./ion-reorder_2.entry.js\": [\n\t\t110,\n\t\t16\n\t],\n\t\"./ion-ripple-effect.entry.js\": [\n\t\t111,\n\t\t47\n\t],\n\t\"./ion-route_4.entry.js\": [\n\t\t112,\n\t\t32\n\t],\n\t\"./ion-searchbar.entry.js\": [\n\t\t113,\n\t\t33\n\t],\n\t\"./ion-segment_2.entry.js\": [\n\t\t114,\n\t\t34\n\t],\n\t\"./ion-select_3.entry.js\": [\n\t\t115,\n\t\t35\n\t],\n\t\"./ion-slide_2.entry.js\": [\n\t\t116,\n\t\t48\n\t],\n\t\"./ion-spinner.entry.js\": [\n\t\t117,\n\t\t13\n\t],\n\t\"./ion-split-pane.entry.js\": [\n\t\t118,\n\t\t49\n\t],\n\t\"./ion-tab-bar_2.entry.js\": [\n\t\t119,\n\t\t36\n\t],\n\t\"./ion-tab_2.entry.js\": [\n\t\t120,\n\t\t15\n\t],\n\t\"./ion-text.entry.js\": [\n\t\t121,\n\t\t37\n\t],\n\t\"./ion-textarea.entry.js\": [\n\t\t122,\n\t\t38\n\t],\n\t\"./ion-toast.entry.js\": [\n\t\t123,\n\t\t39\n\t],\n\t\"./ion-toggle.entry.js\": [\n\t\t124,\n\t\t12\n\t],\n\t\"./ion-virtual-scroll.entry.js\": [\n\t\t125,\n\t\t50\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 62;\nmodule.exports = webpackAsyncContext;","var map = {\n\t\"./ion-icon.entry.js\": [\n\t\t127,\n\t\t57\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 64;\nmodule.exports = webpackAsyncContext;","\r\nexport type UIChangeCallback = (value : any) => void;\r\n\r\nexport type LVUIProperty =\r\n    \"playerDetails\"\r\n    | \"hand\"\r\n    | \"discardedCardTotals\"\r\n    | \"playerId\"\r\n    | \"turnId\"\r\n    | \"interaction\"\r\n    | \"gameState\"\r\n    | \"loggedIn\"\r\n    | \"username\"\r\n    | \"roomcode\"\r\n    | \"pickedCharacterId\"\r\n    | \"alreadyPickedIds\"\r\n    | \"roomSeed\";\r\n\r\nexport type LVUIEvent =\r\n    \"leaveRoom\"\r\n    | \"connectionError\"\r\n    | \"joinRoom\"\r\n    | \"pickedCharacterInUse\"\r\n    | \"redirect\";\r\n\r\ntype LVListenerType = \"PROPERTY\" | \"EVENT\";\r\nexport class LVListener\r\n{\r\n    name : string;\r\n    id : number;\r\n    callback : UIChangeCallback;\r\n    listenerType : LVListenerType;\r\n    tag : string;\r\n    prevValueStr : string;\r\n\r\n    constructor(listenerType: LVListenerType, tag : string, name : string, callback : UIChangeCallback)\r\n    {\r\n        this.listenerType = listenerType;\r\n        this.tag = tag;\r\n        this.name = name;\r\n        this.callback = callback;\r\n        this.id = -1;\r\n        this.prevValueStr = \"\";\r\n    }\r\n}\r\n\r\ninterface UIEventMap {\r\n    [key: string]: LVListener[];\r\n}\r\n\r\nexport class EventHandler\r\n{\r\n    private events : UIEventMap;\r\n    private listenerId : number;\r\n    properties : UIEventMap;\r\n\r\n    constructor()\r\n    {\r\n        this.events = {};\r\n        this.properties = {};\r\n        this.listenerId = 0;\r\n    }\r\n\r\n    private registerListenerToMap(map: UIEventMap, listener : LVListener) : void\r\n    {\r\n        var p = map[listener.name];\r\n        if (p === undefined)\r\n        {\r\n            p = map[listener.name] = [];\r\n        }\r\n        this.listenerId += 1;\r\n        listener.id = this.listenerId;\r\n        p.push(listener);\r\n    }\r\n\r\n    private removeListenerFromMap(map: UIEventMap, listener : LVListener)\r\n    {\r\n        var p = map[listener.name];\r\n        if (p === undefined)\r\n        {\r\n            p = map[listener.name] = [];\r\n        }\r\n        var i;\r\n        for (i = 0; i < p.length; i += 1)\r\n        {\r\n            if (p[i].id === listener.id)\r\n            {\r\n                p.splice(i, 1);\r\n                return true;\r\n            }\r\n        }\r\n        throw Error(\"No listener with id \" + listener.id + \" found...\");\r\n        //return false;\r\n    }\r\n    \r\n    triggerEvent(name : LVUIEvent, value? : any)\r\n    {\r\n        var p = this.events[name];\r\n        var i : number;\r\n        for (i = 0; i < p.length; i += 1)\r\n        {\r\n            p[i].callback(value);\r\n        }\r\n    }\r\n\r\n    propertyChange(property : LVUIProperty, valueStr : string, value : any, tag : string)\r\n    {\r\n        var p = this.properties[property];\r\n        var i : number;\r\n        for (i = 0; i < p.length; i += 1)\r\n        {\r\n            if (tag.length === 0 || p[i].tag === tag)\r\n            {\r\n                if (p[i].prevValueStr !== valueStr)\r\n                {\r\n                    p[i].prevValueStr = valueStr;\r\n                    p[i].callback(value);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    \r\n    register(listeners : LVListenerList)\r\n    {\r\n        var i;\r\n        for (i = 0; i < listeners.list.length; i += 1)\r\n        {\r\n            var map = listeners.list[i].listenerType === \"EVENT\" ? this.events : this.properties;\r\n            this.registerListenerToMap(map, listeners.list[i]);\r\n        }\r\n    }\r\n\r\n    clean(listeners : LVListenerList)\r\n    {\r\n        var i;\r\n        for (i = 0; i < listeners.list.length; i += 1)\r\n        {\r\n            var map = listeners.list[i].listenerType === \"EVENT\" ? this.events : this.properties;\r\n            this.removeListenerFromMap(map, listeners.list[i]);\r\n        }\r\n    }\r\n}\r\n\r\nexport class LVListenerList\r\n{\r\n    list : LVListener[];\r\n    tag : string;\r\n\r\n    constructor(tag : string)\r\n    {\r\n        this.list = [];\r\n        this.tag = tag;\r\n    }\r\n\r\n    setProperties(values : any)\r\n    {\r\n        var i;\r\n        for (i = 0; i < this.list.length; i += 1)\r\n        {\r\n            var item = this.list[i];\r\n            if (item.listenerType === \"PROPERTY\")\r\n            {\r\n                item.callback(values[item.name]);\r\n            }\r\n        }\r\n    }\r\n\r\n    onPropertyChange(name : LVUIProperty, callback : UIChangeCallback)\r\n    {\r\n        this.list.push(new LVListener(\"PROPERTY\", this.tag, name, callback));\r\n    }\r\n    onEvent(name : LVUIEvent, callback : UIChangeCallback)\r\n    {\r\n        this.list.push(new LVListener(\"EVENT\", this.tag, name, callback));\r\n    }\r\n}","export type CardType = \"GUARD\" | \"PRIEST\" | \"BARON\" | \"HANDMAID\" | \"PRINCE\" | \"KING\" | \"COUNTESS\" | \"PRINCESS\";\r\n\r\nexport const orderedCards : CardType[] = [\"GUARD\", \"PRIEST\", \"BARON\", \"HANDMAID\", \"PRINCE\", \"KING\", \"COUNTESS\", \"PRINCESS\"];\r\n\r\nclass CardDetailsMapValue {\r\n    value: number;\r\n    name: string;\r\n    numInDeck: number;\r\n    shortAction: string;\r\n    action: string;\r\n    cardType: CardType;\r\n    \r\n    constructor(map : {\r\n        value: number;\r\n        name: string;\r\n        numInDeck: number;\r\n        shortAction: string;\r\n        action: string;\r\n    }) {\r\n        this.value = map.value;\r\n        this.name = map.name;\r\n        this.numInDeck = map.numInDeck;\r\n        this.shortAction = map.shortAction;\r\n        this.action = map.action;\r\n        this.cardType = orderedCards[map.value];\r\n    }\r\n}\r\n\r\ninterface CardDetailsMap {\r\n    [key: string]: CardDetailsMapValue;\r\n}\r\n\r\nvar cardDetailsMapExport : CardDetailsMap = {\r\n    \"GUARD\":    new CardDetailsMapValue({ \"value\": 1, \"name\": \"Guard\", \"numInDeck\": 5,\r\n        \"shortAction\": \"Guess another players card (you cannot guess \\\"Guard\\\").\",\r\n        \"action\": \"Pick another player and guess their card type (you cannot guess \\\"Guard\\\"). If correct, the other player is eliminated.\" }),\r\n    \"PRIEST\":   new CardDetailsMapValue({ \"value\": 2, \"name\": \"Priest\", \"numInDeck\": 2,\r\n        \"shortAction\": \"Pick another player to privately see their hand.\",\r\n        \"action\": \"Pick another player to privately see their hand.\" }),\r\n    \"BARON\":    new CardDetailsMapValue({ \"value\": 3, \"name\": \"Baron\", \"numInDeck\": 2,\r\n        \"shortAction\": \"Pick another player and compare hands. Lowest value is eliminated.\",\r\n        \"action\": \"Pick another player and privately compare hands. The player with the lower-strength hand is eliminated.\" }),\r\n    \"HANDMAID\": new CardDetailsMapValue({ \"value\": 4, \"name\": \"Handmaid\", \"numInDeck\": 2,\r\n        \"shortAction\": \"You cannot be targeted until your next turn.\",\r\n        \"action\": \"You cannot be targeted until your next turn.\" }),\r\n    \"PRINCE\":   new CardDetailsMapValue({ \"value\": 5, \"name\": \"Prince\", \"numInDeck\": 2,\r\n        \"shortAction\": \"Pick any player to discard their hand and draw a new one.\",\r\n        \"action\": \"Pick any player (including yourself) to discard their hand and draw a new one. If they discard the Princess they are eliminated.\" }),\r\n    \"KING\":     new CardDetailsMapValue({ \"value\": 6, \"name\": \"King\", \"numInDeck\": 1,\r\n        \"shortAction\": \"Pick another player and trade hands with them.\",\r\n        \"action\": \"Pick another player and trade hands with them.\" }),\r\n    \"COUNTESS\": new CardDetailsMapValue({ \"value\": 7, \"name\": \"Countess\", \"numInDeck\": 1,\r\n        \"shortAction\": \"Must be played if your other card is a King or Prince.\",\r\n        \"action\": \"If your other card is a King or Prince card, this card must be played.\" }),\r\n    \"PRINCESS\": new CardDetailsMapValue({ \"value\": 8, \"name\": \"Princess\", \"numInDeck\": 1,\r\n        \"shortAction\": \"If you play this card for any reason, you are eliminated.\",\r\n        \"action\": \"If you play this card for any reason, you are eliminated from the round.\" }),\r\n};\r\n\r\nexport const tokensToWinMap : number[] = [ -1, -1, 7, 5, 4, 4, 4, 4, 4 ];\r\n\r\nvar cardTypesExport : string[] = [];\r\nfunction init()\r\n{\r\n    function addCardTypes(cardStr : string)\r\n    {\r\n        var i;\r\n        var count = cardDetailsMapExport[cardStr].numInDeck;\r\n        for (i = 0; i < count; i += 1)\r\n        {\r\n            cardTypesExport.push(cardStr);\r\n        }\r\n    }\r\n\r\n    var i;\r\n    for (i = 0; i < orderedCards.length; i += 1)\r\n    {\r\n        addCardTypes(orderedCards[i]);\r\n        cardDetailsMapExport[orderedCards[i]].cardType = orderedCards[i];\r\n    }\r\n}\r\ninit();\r\n\r\nexport function getCardType(card : number) : CardType\r\n{\r\n    return cardTypesExport[card] as CardType;\r\n}\r\n\r\nexport const totalNumberOfCards = cardTypesExport.length;\r\n\r\nexport function getCardDetails(cardTypeStr : CardType) : CardDetailsMapValue\r\n{\r\n    return cardDetailsMapExport[cardTypeStr as string];\r\n}","import { CardType, getCardType, orderedCards } from \"./cards\";\r\nimport { GameState, Interaction, PlayerDetails } from \"./Shared\";\r\nimport { EventHandler, LVListenerList, LVUIProperty } from \"./UIListeners\";\r\n\r\nclass ClientApp\r\n{\r\n    pickedCharacterId : number;\r\n    alreadyPickedIds : number[];\r\n    playerId : number;\r\n    numPlayers : number;\r\n    key: number | null;\r\n    username: string;\r\n    roomcode: string;\r\n    websocket: WebSocket | null;\r\n    playerDetails: PlayerDetails[];\r\n    gameState: GameState;\r\n    loggedIn: boolean;\r\n    roomSeed: number;\r\n\r\n    prevUIData: any;\r\n\r\n    hand : CardType[];\r\n    handIds : number[];\r\n    turnId : number;\r\n    interaction : Interaction;\r\n\r\n    uiEventHandler : EventHandler;\r\n    delayUiUpdates : boolean;\r\n    gotoTab : string | null;\r\n\r\n    constructor()\r\n    {\r\n        this.uiEventHandler = new EventHandler();\r\n        this.delayUiUpdates = false;\r\n        this.gotoTab = null;\r\n\r\n        this.pickedCharacterId = -1;\r\n        this.alreadyPickedIds = [];\r\n        this.playerId = -1;\r\n        this.numPlayers = 0;\r\n        this.hand = [];\r\n        this.handIds = [];\r\n        this.turnId = -1;\r\n        this.playerDetails = [];\r\n        this.gameState = \"LOGIN\";\r\n        this.loggedIn = false;\r\n        this.interaction = {\r\n            playerId: -1,\r\n            targetId: -1,\r\n            playedCard: \"GUARD\",\r\n            status: null\r\n        };\r\n        this.roomSeed = 0;\r\n        \r\n        var localStorage = window.localStorage;\r\n\r\n        this.key = localStorage.getItem('key') as number | null;\r\n        if (!this.key)\r\n        {\r\n            this.key = Math.floor(Math.random() * 9999999);\r\n            localStorage.setItem('key', String(this.key));\r\n        }\r\n        this.username = localStorage.getItem('name') || \"\";\r\n        this.roomcode = localStorage.getItem('room') || \"\";\r\n\r\n        this.websocket = null;\r\n\r\n        this.prevUIData = {};\r\n\r\n        function preloadImage(url : string)\r\n        {\r\n            var img = new Image();\r\n            img.src = url;\r\n        }\r\n        var i;\r\n        for (i = 0; i < orderedCards.length; i += 1)\r\n        {\r\n            preloadImage(\"img/\" + orderedCards[i] + \".png\");\r\n        }\r\n    }\r\n\r\n    effectListeners(listeners : LVListenerList)\r\n    {\r\n        var that = this;\r\n        listeners.setProperties(this.buildUIValues(null));\r\n        this.uiEventHandler.register(listeners);\r\n        return function ()\r\n        {\r\n            that.uiEventHandler.clean(listeners);\r\n        };\r\n    }\r\n\r\n    buildUIValues(p : LVUIProperty | null) : any\r\n    {\r\n        var uiValues : any = {\r\n            playerDetails: this.playerDetails,\r\n            hand: this.hand,\r\n            playerId: this.playerId,\r\n            turnId: this.turnId,\r\n            interaction: this.interaction,\r\n            gameState: this.gameState,\r\n            loggedIn: this.loggedIn,\r\n            username: this.username,\r\n            roomcode: this.roomcode,\r\n            pickedCharacterId: this.pickedCharacterId,\r\n            roomSeed: this.roomSeed,\r\n        };\r\n        function addProperty(prop : LVUIProperty, cb : any)\r\n        {\r\n            if (p === null || prop === p)\r\n            {\r\n                uiValues[prop] = cb();\r\n            }\r\n        }\r\n        addProperty(\"discardedCardTotals\", () => this.getCardDiscardedCountArray());\r\n        addProperty(\"alreadyPickedIds\", () => this.getAlreadyPickedCharacterIds());\r\n        return uiValues;\r\n    }\r\n\r\n    updateUI(tag : string = \"\")\r\n    {\r\n        if (this.delayUiUpdates && tag === \"\")\r\n            return;\r\n\r\n        var nextUIValue : any = this.buildUIValues(null);\r\n\r\n        var p : string;\r\n        for (p in this.uiEventHandler.properties)\r\n        {\r\n            var valueStr = JSON.stringify(nextUIValue[p])\r\n            this.uiEventHandler.propertyChange(p as LVUIProperty, valueStr, JSON.parse(valueStr), tag);\r\n            this.prevUIData[p] = valueStr;\r\n        }\r\n    }\r\n\r\n    getUiProperty(p : LVUIProperty)\r\n    {\r\n        return this.buildUIValues(p)[p];\r\n    }\r\n\r\n    resetGame()\r\n    {\r\n        this.hand = [];\r\n        this.handIds = [];\r\n        this.turnId = -1;\r\n    }\r\n\r\n    joinRoom(name : string, roomcode : string)\r\n    {\r\n        this.username = name;\r\n        this.roomcode = roomcode.toUpperCase();\r\n\r\n        var localStorage = window.localStorage;\r\n        localStorage.setItem('name', name);\r\n        localStorage.setItem('room', this.roomcode);\r\n        this.websocket = new WebSocket(\"wss://u72xrovjcj.execute-api.eu-west-2.amazonaws.com/test?room=\" + this.roomcode + \"&key=\" + this.key + \"&name=\" + this.username);\r\n\r\n        function getAlphaIndex(str : string, index : number)\r\n        {\r\n            return str.charCodeAt(0) - \"A\".charCodeAt(0);\r\n        }\r\n\r\n        this.roomSeed = 41 * (getAlphaIndex(this.roomcode, 0) +\r\n                            (getAlphaIndex(this.roomcode, 1) * 26 +\r\n                            (getAlphaIndex(this.roomcode, 2) * 26 +\r\n                            (getAlphaIndex(this.roomcode, 3) * 26))));\r\n\r\n        var that = this;\r\n        this.websocket.onopen = function (/*event*/) {\r\n            that.onopen();\r\n        };\r\n        this.websocket.onmessage = function (event) {\r\n            that.onmessage(event.data);\r\n        };\r\n        this.websocket.onclose = function (/*event*/) {\r\n            that.uiEventHandler.triggerEvent(\"leaveRoom\");\r\n            that.gameState = \"LOGIN\";\r\n            that.loggedIn = false;\r\n            that.updateUI();\r\n        };\r\n        this.websocket.onerror = function (/*event*/) {\r\n            that.uiEventHandler.triggerEvent(\"connectionError\", that.roomcode + \"\");\r\n            that.roomcode = \"\";\r\n            that.loggedIn = false;\r\n            that.updateUI();\r\n        };\r\n    }\r\n\r\n    onopen()\r\n    {\r\n        this.send({ \"cmd\": \"GET\" });\r\n        this.loggedIn = true;\r\n        this.updateUI();\r\n    }\r\n\r\n    createRoom()\r\n    {\r\n        var that = this;\r\n        var xhr = new XMLHttpRequest();\r\n        function reqListener ()\r\n        {\r\n            try\r\n            {\r\n                var data = JSON.parse(xhr.response);\r\n                that.roomcode = data.room;\r\n                that.updateUI();\r\n            }\r\n            catch (e)\r\n            {\r\n            }\r\n        }\r\n\r\n        xhr.onload = reqListener;\r\n        xhr.open(\"GET\", 'https://bzlzgmgcuh.execute-api.eu-west-2.amazonaws.com/default/loveletter-create');\r\n        xhr.setRequestHeader(\"Content-Type\", \"text/plain\");\r\n        xhr.send();\r\n    }\r\n\r\n    getAlreadyPickedCharacterIds()\r\n    {\r\n        this.alreadyPickedIds = [];\r\n\r\n        var i;\r\n        var playerDetails;\r\n        for (i = 0; i < this.playerDetails.length; i += 1)\r\n        {\r\n            playerDetails = this.playerDetails[i];\r\n            if (i === this.playerId)\r\n                continue;\r\n            if (playerDetails.characterId !== -1)\r\n                this.alreadyPickedIds.push(playerDetails.characterId);\r\n        }\r\n        return this.alreadyPickedIds;\r\n    }\r\n\r\n    pickCharacter(selectedCharacterId : number)\r\n    {\r\n        this.send({ \"cmd\": \"PICK_CHARACTER\", \"characterId\": selectedCharacterId });\r\n    }\r\n\r\n    clearPickedCharacter()\r\n    {\r\n        this.send({ \"cmd\": \"CLEAR_PICKED_CHARACTER\" });\r\n    }\r\n\r\n    getCardDiscardedCountArray()\r\n    {\r\n        var result = [];\r\n        var i;\r\n        for (i = 0; i < orderedCards.length; i += 1)\r\n        {\r\n            result[i] = this.getCardDiscardedCount(orderedCards[i]);\r\n        }\r\n        return result;\r\n    }\r\n\r\n    getCardDiscardedCount(cardStr : CardType)\r\n    {\r\n        var i;\r\n        var j;\r\n        var total = 0;\r\n        for (i = 0; i < this.playerDetails.length; i += 1)\r\n        {\r\n            var discarded : CardType[] = this.playerDetails[i].discarded;\r\n            for (j = 0; j < discarded.length; j += 1)\r\n            {\r\n                if (discarded[j] === cardStr)\r\n                    total += 1;\r\n            }\r\n        }\r\n        return total;\r\n    }\r\n\r\n    send(jsonData : any)\r\n    {\r\n        jsonData[\"room\"] = this.roomcode;\r\n        this.websocket!.send(JSON.stringify(jsonData));\r\n    }\r\n\r\n    start()\r\n    {\r\n        this.send({ \"cmd\": \"START\" });\r\n    }\r\n    /*\r\n    restart()\r\n    {\r\n        this.send({ \"cmd\": \"RESTART\" });\r\n    }\r\n\r\n    forceRoundEnd()\r\n    {\r\n        this.send({ \"cmd\": \"FORCE_ROUND_END\" });\r\n    }\r\n\r\n    */\r\n    onmessage(strData : string)\r\n    {\r\n        var prevInteractionStatus = this.interaction.status;\r\n        if (prevInteractionStatus === \"CONTINUE\")\r\n            prevInteractionStatus = \"REVEAL\";\r\n\r\n        var data = JSON.parse(strData);\r\n        switch(data.cmd) {\r\n            case \"CHARACTER_ID_IN_USE\":\r\n                this.uiEventHandler.triggerEvent(\"pickedCharacterInUse\");\r\n            break;\r\n            case \"CHARACTER_PICKED\":\r\n                this.playerDetails[data.playerId].characterId = data.characterId;\r\n                if (data.playerId === this.playerId)\r\n                {\r\n                    this.pickedCharacterId = data.characterId;\r\n                    this.uiEventHandler.triggerEvent(\"redirect\", \"/tabs/game\");\r\n                }\r\n            break;\r\n            case \"CLEAR_CHARACTER_PICK\":\r\n                this.playerDetails[data.playerId].characterId = -1;\r\n            break;\r\n            case \"START_CARD\":\r\n                this.playerId = data.playerId;\r\n                this.addCard(data.pickup);\r\n            break;\r\n            case \"PICKUP\":\r\n            case \"YOUR_TURN\":\r\n                // clear your SAFE state\r\n                this.playerDetails[this.playerId].state = \"ALIVE\";\r\n                this.addCard(data.pickup);\r\n            break;\r\n            case \"JOINED\":\r\n                if (data.index >= this.playerDetails.length)\r\n                {\r\n                    this.playerDetails[data.index] = {\r\n                        name: data.name,\r\n                        characterId: (data.characterId === undefined || data.characterId === null) ? -1 : data.characterId,\r\n                        wins: 0,\r\n                        state: \"ALIVE\",\r\n                        discarded: []\r\n                    };\r\n                }\r\n                else\r\n                {\r\n                    var joinedPlayer = this.playerDetails[data.index];\r\n                    joinedPlayer.name = data.name;\r\n                    joinedPlayer.characterId = (data.characterId === undefined || data.characterId === null) ? -1 : data.characterId;\r\n                }\r\n            break;\r\n            case \"START_GAME\":\r\n            case \"STATE\":\r\n            case \"PLAYED\":\r\n            case \"NEXT_ROUND\":\r\n            case \"END_TURN\":\r\n            case \"ROUND_COMPLETE\":\r\n                this.gotFullState(data);\r\n            break;\r\n            case \"REVEALED\":\r\n                this.interaction.status = \"CONTINUE\";\r\n                this.reveal();\r\n            break;\r\n            case \"NEXT_TURN\":\r\n                this.nextTurn(data);\r\n            break;\r\n            case \"DISCARD\":\r\n                this.discard(data);\r\n            break;\r\n        }\r\n\r\n        var newInteractionStatus = this.interaction.status;\r\n        if (newInteractionStatus === \"CONTINUE\")\r\n            newInteractionStatus = \"REVEAL\";\r\n\r\n        if (newInteractionStatus !== prevInteractionStatus)\r\n        {\r\n            var gotoTab : string | undefined;\r\n            if (this.interaction.status !== null)\r\n            {\r\n                if (this.interaction.status === \"ROUND_COMPLETE\")\r\n                {\r\n                    this.updateUI(\"roundComplete\");\r\n                    gotoTab = \"/page/RoundComplete\";\r\n                }\r\n                else\r\n                {\r\n                    this.updateUI(\"interaction\");\r\n                    gotoTab = \"/tabs/interaction\";\r\n                }\r\n            }\r\n            else if (window.location.pathname.endsWith(\"/tabs/interaction\") ||\r\n                     window.location.pathname.endsWith(\"/page/RoundComplete\"))\r\n            {\r\n                this.updateUI(\"game\");\r\n                gotoTab = \"/tabs/game\";\r\n            }\r\n            \r\n            if (gotoTab)\r\n            {\r\n                this.delayUiUpdates = true; // delay any UI updates until the page has changed...\r\n\r\n                var that = this;\r\n                this.gotoTab = gotoTab;\r\n                setTimeout(function ()\r\n                {\r\n                    // once the page UI has updated switch to it\r\n                    that.uiEventHandler.triggerEvent(\"redirect\", that.gotoTab);\r\n                    var intervalId = setInterval(function ()\r\n                    {\r\n                        if (window.location.pathname.endsWith(that.gotoTab!))\r\n                        {\r\n                            that.gotoTab = null;\r\n                            that.delayUiUpdates = false;\r\n                            that.updateUI();\r\n                            clearInterval(intervalId!);\r\n                        }\r\n                    }, 10);\r\n                }, 1);\r\n            }\r\n        }\r\n\r\n        this.updateUI();\r\n    }\r\n    \r\n    updatePlayerDetails(data : any)\r\n    {\r\n        this.playerDetails = [];\r\n        var i;\r\n        for (i = 0; i < data.players.length; i += 1)\r\n        {\r\n            var player = data.players[i];\r\n            var playerDetails : PlayerDetails = {\r\n                name: player.name,\r\n                characterId: (player.characterId === null || player.characterId === undefined) ? -1 : player.characterId,\r\n                wins: 0,\r\n                state: \"ALIVE\",\r\n                discarded: []\r\n            };\r\n\r\n            if (data.playerStates)\r\n            {\r\n                var playerState = data.playerStates[i];\r\n                playerDetails.wins = playerState.wins;\r\n                var j;\r\n                for (j = 0; j < playerState.played.length; j += 1)\r\n                {\r\n                    playerDetails.discarded.push(getCardType(playerState.played[j]));\r\n                }\r\n                playerDetails.state = playerState.state;\r\n            }\r\n\r\n            if (this.playerId === i)\r\n            {\r\n                this.pickedCharacterId = (player.characterId === null || player.characterId === undefined) ? -1 : player.characterId;\r\n            }\r\n\r\n            this.playerDetails.push(playerDetails);\r\n        }\r\n    }\r\n\r\n    playCard(handCardId : number, target? : number, guess? : CardType)\r\n    {\r\n        var cmd;\r\n        if (handCardId === 0)\r\n            cmd = \"PLAY_HAND\";\r\n        else if (handCardId === 1)\r\n            cmd = \"PLAY_PICKUP\";\r\n\r\n        var msg : any = { \"room\": this.roomcode, \"cmd\": cmd };\r\n        if (target !== undefined)\r\n            msg[\"target\"] = target;\r\n        if (guess !== undefined)\r\n            msg[\"guess\"] = guess;\r\n        this.send(msg);\r\n        this.delayUiUpdates = true; // delay any UI updates until the page has changed to interaction...\r\n    }\r\n\r\n    gotFullState(data : any)\r\n    {\r\n        if (data.playerId !== undefined)\r\n            this.playerId = data.playerId;\r\n        this.numPlayers = data.players.length;\r\n\r\n        var prevGameState = this.gameState;\r\n        this.gameState = data.gamestate;\r\n        \r\n        if (prevGameState === \"LOGIN\")\r\n        {\r\n            this.uiEventHandler.triggerEvent(\"redirect\", (data.gamestate === \"LOGIN\") ? \"/page/PickCharacter\" : \"/tabs\");\r\n        }\r\n\r\n        if (data.gamestate === \"LOGIN\")\r\n        {\r\n            this.updatePlayerDetails(data);\r\n        }\r\n        else if (data.gamestate === \"PLAYING\")\r\n        {\r\n            this.handIds = data.hand || [];\r\n            this.hand = this.covertNumbersToCards(data.hand || []);\r\n            this.turnId = data.turn;\r\n            if (data.interaction.state === undefined)\r\n            {\r\n                this.interaction.status = null;\r\n            }\r\n            else\r\n            {\r\n                this.interaction = {\r\n                    playerId: data.interaction.playerId,\r\n                    playedCard: getCardType(data.interaction.card),\r\n                    otherCard: getCardType(data.interaction.otherCard),\r\n                    status: data.interaction.state,\r\n                    guess: data.interaction.guess,\r\n                    result: data.interaction.result,\r\n                    targetId: data.interaction.target,\r\n                    loserId: data.interaction.loser,\r\n                    revealedCard: getCardType(data.interaction.revealedCard),\r\n                    discard: getCardType(data.interaction.discard),\r\n                    swappedFor: getCardType(data.interaction.swappedFor),\r\n                    swappedForCardId: data.interaction.swappedFor,\r\n                    prevCard: getCardType(data.interaction.prevCard),\r\n\r\n                    // round end state\r\n                    hiddenCard: getCardType(data.interaction.hiddenCard),\r\n                    finalCards: this.covertNumbersToCards(data.interaction.finalCards || []),\r\n                    winnerIds: data.interaction.roundWinners,\r\n                    gameWinner: data.interaction.gameWinner\r\n                };\r\n            }\r\n            this.updatePlayerDetails(data);\r\n        }\r\n    }\r\n\r\n    covertNumbersToCards(data : number[]) : CardType[]\r\n    {\r\n        var result : CardType[] = [];\r\n        var i;\r\n        for (i = 0; i < data.length; i += 1)\r\n        {\r\n            result.push(getCardType(data[i]));\r\n        }\r\n        return result;\r\n    }\r\n\r\n    discard(data : any)\r\n    {\r\n        var playerDetails = this.playerDetails[data.playerId];\r\n        var discardCard : CardType = getCardType(data.card);\r\n        if (data.playerId === this.playerId && !data.played)\r\n        {\r\n            var i;\r\n            for (i = 0; i < this.handIds.length; i += 1)\r\n            {\r\n                if (data.card === this.handIds[i])\r\n                {\r\n                    playerDetails.discarded.push(discardCard);\r\n                    this.hand.splice(i, 1);\r\n                    this.handIds.splice(i, 1);\r\n                }\r\n            }\r\n        }\r\n        else\r\n        {\r\n            playerDetails.discarded.push(discardCard);\r\n        }\r\n    }\r\n\r\n    nextTurn(data : any)\r\n    {\r\n        this.turnId = data.turn;\r\n        this.interaction.status = null;\r\n        // clear the SAFE state\r\n        this.playerDetails[this.turnId].state = \"ALIVE\";\r\n    }\r\n\r\n    addCard(cardId : number)\r\n    {\r\n        var i;\r\n        for (i = 0; i < this.handIds.length; i += 1)\r\n        {\r\n            if (cardId === this.handIds[i])\r\n            {\r\n                return;\r\n            }\r\n        }\r\n        this.hand.push(getCardType(cardId));\r\n        this.handIds.push(cardId);\r\n    }\r\n\r\n    roundComplete(data : any)\r\n    {\r\n        \r\n    }\r\n\r\n    /*\r\n    getOtherCard()\r\n    {\r\n        var i;\r\n        for (i = 0; i < 2; i += 1)\r\n        {\r\n            if (this.hand[i] !== this.interaction.card)\r\n                return this.hand[i];\r\n        }\r\n        return this.hand[0];\r\n    }\r\n    */\r\n    interactionStep()\r\n    {\r\n        if (this.interaction.status === \"CONTINUE\" ||\r\n            this.interaction.status === \"ROUND_COMPLETE\")\r\n        {\r\n            // wait for the page to change before updating any UI\r\n            this.delayUiUpdates = true;\r\n        }\r\n        this.send({\"cmd\": this.interaction.status});\r\n    }\r\n\r\n    reveal()\r\n    {\r\n        if (this.interaction.playedCard === \"KING\" && this.interaction.swappedForCardId !== undefined)\r\n        {\r\n            this.hand[0] = this.interaction.swappedFor!;\r\n            this.handIds[0] = this.interaction.swappedForCardId!;\r\n        }\r\n    }\r\n}\r\n\r\nexport let clientApp = new ClientApp();\r\n\r\ndeclare global {\r\n    interface Window { expose: any; }\r\n}\r\nwindow.expose = { clientApp: clientApp };\r\n","export const charactersMap : string[] = [\r\n    \"001-centaur.svg\",\r\n    \"002-kraken.svg\",\r\n    \"003-dinosaur.svg\",\r\n    \"004-tree-1.svg\",\r\n    \"005-hand.svg\",\r\n    \"006-echidna.svg\",\r\n    \"007-robot.svg\",\r\n    \"008-mushroom.svg\",\r\n    \"009-harpy.svg\",\r\n    \"010-phoenix.svg\",\r\n    \"011-dragon-1.svg\",\r\n    \"012-devil.svg\",\r\n    \"013-troll.svg\",\r\n    \"014-alien.svg\",\r\n    \"015-minotaur.svg\",\r\n    \"016-madre-monte.svg\",\r\n    \"017-satyr.svg\",\r\n    \"018-karakasakozou.svg\",\r\n    \"019-pirate.svg\",\r\n    \"020-werewolf.svg\",\r\n    \"021-scarecrow.svg\",\r\n    \"022-valkyrie.svg\",\r\n    \"023-curupira.svg\",\r\n    \"024-loch-ness-monster.svg\",\r\n    \"025-tree.svg\",\r\n    \"026-cerberus.svg\",\r\n    \"027-gryphon.svg\",\r\n    \"028-mermaid.svg\",\r\n    \"029-vampire.svg\",\r\n    \"030-goblin.svg\",\r\n    \"031-yeti.svg\",\r\n    \"032-leprechaun.svg\",\r\n    \"033-medusa.svg\",\r\n    \"034-chimera.svg\",\r\n    \"035-elf.svg\",\r\n    \"036-hydra.svg\",\r\n    \"037-cyclops.svg\",\r\n    \"038-pegasus.svg\",\r\n    \"039-narwhal.svg\",\r\n    \"040-woodcutter.svg\",\r\n    \"041-zombie.svg\",\r\n    \"042-dragon.svg\",\r\n    \"043-frankenstein.svg\",\r\n    \"044-witch.svg\",\r\n    \"045-fairy.svg\",\r\n    \"046-genie.svg\",\r\n    \"047-pinocchio.svg\",\r\n    \"048-ghost.svg\",\r\n    \"049-wizard.svg\",\r\n    \"050-unicorn.svg\",\r\n];\r\n","import React from 'react';\r\nimport { getCardDetails, CardType } from './cards';\r\nimport { charactersMap } from './charactermap';\r\n\r\nexport type GameState = \"LOGIN\" | \"PLAYING\";\r\nexport type PlayerStatus = \"ALIVE\" | \"DEAD\" | \"SAFE\";\r\nexport type DiscardedCardTotals = number[];\r\n\r\nexport interface PlayerDetails {\r\n    name: string;\r\n    characterId: number;\r\n    state: PlayerStatus;\r\n    wins: number;\r\n    discarded: CardType[];\r\n}\r\n\r\nexport interface Interaction {\r\n    playerId: number;\r\n    playedCard: CardType;\r\n    status: \"REVEAL\" | \"CONTINUE\" | \"ROUND_COMPLETE\" | null;\r\n    targetId?: number;\r\n    guess?: CardType;\r\n    result?: \"CORRECT_GUESS\" | \"TIE\";\r\n    loserId?: number;\r\n    revealedCard?: CardType;\r\n    otherCard?: CardType;\r\n    discard?: CardType;\r\n    swappedFor?: CardType;\r\n    swappedForCardId?: number;\r\n    prevCard?: CardType;\r\n    \r\n    // round end state\r\n    hiddenCard?: CardType;\r\n    finalCards?: CardType[];\r\n    winnerIds?: number[];\r\n    gameWinner?: number;\r\n}\r\n\r\nexport function LVCard(props : {children: any, highlight? : boolean})\r\n{\r\n    return (\r\n        <div className={props.highlight ? \"myCard myCardHighlight\" : \"myCard\"}>\r\n            {props.children}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport function InteractionCard(props : {children: any})\r\n{\r\n    return (\r\n        <div className=\"myCard\">\r\n            <div className=\"interactionText\">\r\n                {props.children}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport function CardName(props : {card: CardType})\r\n{\r\n    return <span className={\"cardName cardName\" + props.card}>{getCardDetails(props.card).name} ({getCardDetails(props.card).value})</span>;\r\n}\r\n\r\nexport function CardImgAndDetails(props : {card: CardType})\r\n{\r\n    return (\r\n        <React.Fragment>\r\n            <img className=\"cardImg\" src={\"img/\" + props.card + \".png\"} alt={props.card}></img>\r\n            <div className=\"cardText\">{getCardDetails(props.card).action}</div>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport function PlayerCharacterName(props : {playerDetails: PlayerDetails})\r\n{\r\n    return (\r\n        <React.Fragment>\r\n            <PlayerCharacter playerDetails={props.playerDetails}/>\r\n            <span className=\"playerName\">{props.playerDetails.name}</span>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport function PlayerCharacter(props : {playerDetails: PlayerDetails})\r\n{\r\n    var imgPath;\r\n    if (props.playerDetails.characterId === -1)\r\n    {\r\n        imgPath = \"img/unknown-character.svg\";\r\n    }\r\n    else if (props.playerDetails.state === \"ALIVE\" || props.playerDetails.state === \"SAFE\")\r\n    {\r\n        imgPath = \"img/characters/\" + charactersMap[props.playerDetails.characterId];\r\n    }\r\n    else // DEAD\r\n    {\r\n        imgPath = \"img/dead-characters/\" + charactersMap[props.playerDetails.characterId];\r\n    }\r\n    return <img className=\"characterImg\" src={imgPath} alt={imgPath}/>;\r\n}\r\n\r\nexport function PlayerState(props : { status : PlayerStatus })\r\n{\r\n    if (props.status === \"SAFE\")\r\n    {\r\n        return <img className=\"statusImg\" src=\"img/shield.svg\" alt=\"SAFE\"/>;\r\n    }\r\n    else if (props.status === \"DEAD\")\r\n    {\r\n        return <img className=\"statusImg\" src=\"img/danger.svg\" alt=\"DEAD\"/>;\r\n    }\r\n    return null;\r\n}\r\n\r\ninterface DotDotDotState {\r\n    \"counter\": number;\r\n}\r\nexport class DotDotDot extends React.Component<{}, DotDotDotState> {\r\n    timerID : NodeJS.Timeout | null;\r\n\r\n    constructor(props : any)\r\n    {\r\n        super(props);\r\n        this.state = {\"counter\": 3};\r\n        this.timerID = null;\r\n    }\r\n\r\n    componentDidMount()\r\n    {\r\n        this.timerID = setInterval(\r\n            () => this.tick(),\r\n            500\r\n        );\r\n    }\r\n\r\n    componentWillUnmount()\r\n    {\r\n        if (this.timerID)\r\n            clearInterval(this.timerID);\r\n    }\r\n\r\n    tick()\r\n    {\r\n        this.setState((state, props) => (\r\n            {\"counter\": (state.counter + 1) % 4}\r\n        ));\r\n    }\r\n\r\n    render()\r\n    {\r\n        var resultStr = \"\";\r\n        var i;\r\n        for (i = -1; i < this.state.counter; i += 1)\r\n        {\r\n            resultStr += \".\";\r\n        }\r\n\r\n        return (\r\n            <span>{resultStr}</span>\r\n        );\r\n    }\r\n}\r\n","import {\n    IonContent,\n    IonIcon,\n    IonItem,\n    IonLabel,\n    IonList,\n    IonMenu,\n} from '@ionic/react';\n\nimport React, { useEffect, useState } from 'react';\nimport { Redirect, useHistory, useLocation } from 'react-router-dom';\nimport { caretForwardCircleOutline, codeOutline, helpCircleOutline } from 'ionicons/icons';\nimport './Menu.css';\nimport { LVListenerList } from '../UIListeners';\nimport { clientApp } from '../ClientApp';\nimport { PlayerCharacter, PlayerDetails } from '../Shared';\n\ninterface AppPage {\n    url: string;\n    icon: string;\n    title: string;\n}\n\nconst loginPage = '/page/Login';\n\nconst appPages: AppPage[] = [\n    {\n        title: 'Game',\n        url: '/tabs/game',\n        icon: caretForwardCircleOutline\n    },\n    {\n        title: 'Help',\n        url: '/page/Help',\n        icon: helpCircleOutline\n    }\n];\n\nconst Menu: React.FC = () => {\n    const location = useLocation();\n\n    let history = useHistory();\n    \n    const [loggedIn, setLoggedIn] = useState<boolean>(clientApp.getUiProperty(\"loggedIn\"));\n    const [room, setRoom] = useState<string>(clientApp.getUiProperty(\"roomcode\"));\n    const [playerDetails, setPlayerDetails] = useState<PlayerDetails[]>(clientApp.getUiProperty(\"playerDetails\"));\n    const [playerId, setPlayerId] = useState<number>(clientApp.getUiProperty(\"playerId\"));\n\n    useEffect(() => {\n        var listeners = new LVListenerList(\"menu\");\n        listeners.onPropertyChange(\"roomcode\", (value : string) => { setRoom(value); });\n        listeners.onPropertyChange(\"loggedIn\", function (v : boolean) { setLoggedIn(v); });\n        listeners.onPropertyChange(\"playerDetails\", function (v : PlayerDetails[]) { setPlayerDetails(v); });\n        listeners.onPropertyChange(\"playerId\", function (v : number) { setPlayerId(v); });\n        listeners.onEvent(\"redirect\", function(v : string) { history.push(v); });\n        return clientApp.effectListeners(listeners);\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    if (!loggedIn)\n    {\n        return (\n            <Redirect to={loginPage}></Redirect>\n        );\n    }\n\n    if (location.pathname === loginPage)\n    {\n        return null;\n    }\n\n    return (\n        <IonMenu contentId=\"main\" type=\"overlay\">\n            <IonContent>\n                <IonList>\n                    {\n                        playerDetails[playerId] === undefined || playerDetails[playerId].characterId === null ? null :\n                        <IonItem lines=\"none\" detail={false}>\n                            <div className=\"menuCharacter\">\n                                <PlayerCharacter playerDetails={playerDetails[playerId]}></PlayerCharacter>\n                            </div>\n                        </IonItem>\n                    }\n                    <IonItem lines=\"none\" detail={false}>\n                        <IonIcon slot=\"start\" icon={codeOutline} />\n                        <IonLabel>Room: {room}</IonLabel>\n                    </IonItem>\n                    { location.pathname === \"/page/PickCharacter\" ? null : appPages.map((appPage, index) => {\n                        return (\n                            <IonItem key={index} className={location.pathname.startsWith(appPage.url) ? 'selected' : ''} routerLink={appPage.url} routerDirection=\"none\" lines=\"none\" detail={false}>\n                                <IonIcon slot=\"start\" icon={appPage.icon} />\n                                <IonLabel>{appPage.title}</IonLabel>\n                            </IonItem>\n                        );\n                    })}\n                </IonList>\n            </IonContent>\n        </IonMenu>\n    );\n};\n\nexport default Menu;\n","import {\r\n    IonButton,\r\n    IonButtons,\r\n    IonContent, \r\n    IonHeader,\r\n    IonIcon,\r\n    IonMenuButton,\r\n    IonPage,\r\n    IonTitle,\r\n    IonToolbar} from '@ionic/react';\r\nimport React, { useEffect, useState } from 'react';\r\nimport Prando from 'prando';\r\nimport { CardType, totalNumberOfCards } from '../cards';\r\nimport { CardName, DotDotDot, LVCard, InteractionCard, PlayerCharacter, PlayerDetails, PlayerState, GameState } from '../Shared';\r\nimport './Page.css';\r\nimport { chevronDownOutline, chevronUpOutline } from 'ionicons/icons';\r\nimport { clientApp } from '../ClientApp';\r\nimport { LVListenerList } from '../UIListeners';\r\n\r\nfunction DiscardList(props : {cards: CardType[]})\r\n{\r\n    return (<>{props.cards.map((card, index) =>\r\n            <div key={index}>\r\n                <CardName card={card} />\r\n            </div>\r\n        )}</>);\r\n}\r\n\r\nexport function Tokens(props : {wins: number, seed: number})\r\n{\r\n    let rng = new Prando(props.seed);\r\n\r\n    interface Gem\r\n    {\r\n        rotate: number;\r\n        hueRotate: number;\r\n        gemId: number;\r\n    }\r\n\r\n    var tokens : Gem[] = [];\r\n    var i : number;\r\n    for (i = 0; i < props.wins; i += 1)\r\n    {\r\n        tokens.push({ \r\n            gemId: rng.nextInt(0, 2),\r\n            hueRotate: rng.nextInt(0, 359),\r\n            rotate: rng.nextInt(0, 359)\r\n        });\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {\r\n                tokens.map((gem, index) =>\r\n                    <img key={index} className=\"gemImg\" style={\r\n                        {\r\n                            \"transform\": \"rotate(\" + gem.rotate + \"deg)\",\r\n                            \"filter\": \"hue-rotate(\" + gem.hueRotate + \"deg)\"\r\n                        } }\r\n                    src={\"img/gem\" + gem.gemId + \".svg\"}\r\n                    alt=\"T\"/>\r\n                )\r\n            }\r\n        </>\r\n    );\r\n}\r\n\r\ninterface PlayerLineProps {\r\n    playerDetails: PlayerDetails;\r\n    hasDropdown: boolean;\r\n    seed: number;\r\n}\r\n\r\ninterface PlayerLineState {\r\n    \"dropdownOpen\": boolean;\r\n}\r\nexport class PlayerLine extends React.Component<PlayerLineProps, PlayerLineState> {\r\n    dropdownOpen : boolean;\r\n\r\n    constructor(props : PlayerLineProps)\r\n    {\r\n        super(props);\r\n        this.state = {\"dropdownOpen\": false};\r\n        this.dropdownOpen = false;\r\n    }\r\n\r\n    render()\r\n    {\r\n        var that = this;\r\n        function handleClick()\r\n        {\r\n            if (that.props.hasDropdown)\r\n            {\r\n                that.setState((state, props) => ({\r\n                    dropdownOpen: !state.dropdownOpen\r\n                }));\r\n            }\r\n        }\r\n\r\n        return (\r\n            <div onClick={handleClick} className=\"fullBox\">\r\n                <div className=\"playerTopLine\">\r\n                    <span className=\"playerTopLineLeft\">\r\n                        <PlayerCharacter playerDetails={this.props.playerDetails} />\r\n                        <span className=\"playerName\">{this.props.playerDetails.name}</span>\r\n                        <PlayerState status={this.props.playerDetails.state} />\r\n                    </span>\r\n                    <span className=\"playerTopLineRight\">\r\n                        <span className=\"middlerHack\"></span>\r\n                        <Tokens wins={this.props.playerDetails.wins} seed={this.props.seed} />\r\n                        <span className=\"gemPadding\"></span>\r\n                        {\r\n                            this.props.playerDetails.discarded.length > 0 ?\r\n                                <IonIcon icon={this.state.dropdownOpen ? chevronUpOutline : chevronDownOutline} className=\"verticalAlignMiddle\"></IonIcon>\r\n                                : <span className=\"dropdownHiddenPadding\"></span>\r\n                        }\r\n                    </span>\r\n                </div>\r\n                <div>\r\n                {\r\n                    (this.props.playerDetails.discarded.length === 0 || !this.state.dropdownOpen) ? null :\r\n                    <>\r\n                        <div>Discarded:</div>\r\n                        <DiscardList cards={this.props.playerDetails.discarded} />\r\n                    </>\r\n                }\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction PlayersList(props : {playerDetails : PlayerDetails[], turnId : number, roomSeed : number})\r\n{\r\n    return (<>{props.playerDetails.map((playerDetails, index) =>\r\n        <LVCard key={playerDetails.name} highlight={props.turnId === index}>\r\n            <PlayerLine playerDetails={playerDetails} hasDropdown={playerDetails.discarded.length > 0} seed={props.roomSeed + 10 * index}/>\r\n        </LVCard>\r\n    )}</>);\r\n}\r\n\r\nfunction StartGameCard(props : {playerDetails : PlayerDetails[], gameState: GameState, playerId: number})\r\n{\r\n    function handleStart()\r\n    {\r\n        clientApp.start();\r\n    }\r\n\r\n    if (props.gameState !== \"LOGIN\")\r\n        return null;\r\n\r\n    if (props.playerId === 0)\r\n    {\r\n        var i;\r\n        var allPicked = true;\r\n        for (i = 0; i < props.playerDetails.length; i += 1)\r\n        {\r\n            if (props.playerDetails[i].characterId === -1)\r\n            {\r\n                allPicked = false;\r\n                break;\r\n            }\r\n        }\r\n        if (allPicked)\r\n        {\r\n            if (props.playerDetails.length > 1)\r\n            {\r\n                return (\r\n                    <InteractionCard>\r\n                        <IonButton onClick={handleStart}>Start Game</IonButton>\r\n                    </InteractionCard>\r\n                );\r\n            }\r\n            else\r\n            {\r\n                return (\r\n                    <InteractionCard>\r\n                        <div className=\"interactionText\">\r\n                            Waiting for more players\r\n                        </div>\r\n                        <div className=\"interactionDots\">\r\n                            <DotDotDot />\r\n                        </div>\r\n                    </InteractionCard>\r\n                );\r\n            }\r\n        }\r\n        else\r\n        {\r\n            return (\r\n                <InteractionCard>\r\n                    <div className=\"interactionText\">\r\n                        Waiting players to pick character\r\n                    </div>\r\n                    <div className=\"interactionDots\">\r\n                        <DotDotDot />\r\n                    </div>\r\n                </InteractionCard>\r\n            );\r\n        }\r\n    }\r\n    else\r\n    {\r\n        return (\r\n            <InteractionCard>\r\n                <div className=\"interactionText\">\r\n                    Waiting for game to start\r\n                </div>\r\n                <div className=\"interactionDots\">\r\n                    <DotDotDot />\r\n                </div>\r\n            </InteractionCard>\r\n        );\r\n    }\r\n}\r\n\r\nfunction TopLine(props : {discardedCardTotals : number[], playerDetails: PlayerDetails[], gameState: GameState, roomCode: string})\r\n{\r\n    if (props.gameState === \"LOGIN\")\r\n    {\r\n        return (\r\n            <InteractionCard>Room code {props.roomCode}</InteractionCard>\r\n        );\r\n    }\r\n\r\n    var i;\r\n    var totalDiscards = 0;\r\n    for (i = 0; i < props.discardedCardTotals.length; i += 1)\r\n    {\r\n        totalDiscards += props.discardedCardTotals[i];\r\n    }\r\n    // -1 for hidden card, -1 for active player having 2 cards\r\n    var cardsLeft = totalNumberOfCards - 2 - totalDiscards;\r\n    for (i = 0; i < props.playerDetails.length; i += 1)\r\n    {\r\n        if (props.playerDetails[i].state !== \"DEAD\")\r\n        {\r\n            cardsLeft -= 1;\r\n        }\r\n    }\r\n\r\n    if (cardsLeft < 5)\r\n    {\r\n        return (\r\n            <LVCard>\r\n                <div className=\"cardsLeft\">\r\n                    {cardsLeft} cards left{cardsLeft <= 2 ? \"!\" : \"...\"}\r\n                </div>\r\n            </LVCard>\r\n        );\r\n    }\r\n    else\r\n    {\r\n        return null;\r\n    }\r\n}\r\n\r\nconst GamePage: React.FC = () => {\r\n\r\n    const [playerDetails, setPlayerDetails] = useState<PlayerDetails[]>(clientApp.getUiProperty(\"playerDetails\"));\r\n    const [discardedCardTotals, setDiscardedCardTotals] = useState<number[]>(clientApp.getUiProperty(\"discardedCardTotals\"));\r\n    const [gameState, setGameState] = useState<GameState>(clientApp.getUiProperty(\"gameState\"));\r\n    const [roomSeed, setRoomSeed] = useState<number>(clientApp.getUiProperty(\"roomSeed\"));\r\n    const [room, setRoom] = useState<string>(clientApp.getUiProperty(\"roomcode\"));\r\n    const [playerId, setPlayerId] = useState<number>(clientApp.getUiProperty(\"playerId\"));\r\n    const [turnId, setTurnId] = useState<number>(clientApp.getUiProperty(\"turnId\"));\r\n    \r\n    useEffect(() => {\r\n        var listeners = new LVListenerList(\"game\");\r\n        listeners.onPropertyChange(\"roomcode\", (value : string) => { setRoom(value); });\r\n        listeners.onPropertyChange(\"playerDetails\", function(value : PlayerDetails[]) { setPlayerDetails(value); });\r\n        listeners.onPropertyChange(\"discardedCardTotals\", function(value : number[]) { setDiscardedCardTotals(value); });\r\n        listeners.onPropertyChange(\"gameState\", function(value : GameState) { setGameState(value); });\r\n        listeners.onPropertyChange(\"roomSeed\", function(value : number) { setRoomSeed(value); });\r\n        listeners.onPropertyChange(\"playerId\", function(value : number) { setPlayerId(value); });\r\n        listeners.onPropertyChange(\"turnId\", function(value : number) { setTurnId(value); });\r\n        return clientApp.effectListeners(listeners);\r\n    }, []);\r\n\r\n    return (\r\n    <IonPage id=\"game\">\r\n        <IonContent fullscreen>\r\n            <IonHeader>\r\n                <IonToolbar>\r\n                    <IonButtons slot=\"start\">\r\n                        <IonMenuButton />\r\n                    </IonButtons>\r\n                    <IonTitle></IonTitle>\r\n                </IonToolbar>\r\n            </IonHeader>\r\n            <TopLine discardedCardTotals={discardedCardTotals} playerDetails={playerDetails} gameState={gameState} roomCode={room} />\r\n            <PlayersList playerDetails={playerDetails} turnId={turnId} roomSeed={roomSeed} />\r\n            <StartGameCard playerDetails={playerDetails} gameState={gameState} playerId={playerId} />\r\n        </IonContent>\r\n    </IonPage>\r\n    );\r\n};\r\n\r\nexport default GamePage;","import {\r\n    IonButton,\r\n    IonButtons,\r\n    IonContent, \r\n    IonHeader,\r\n    IonItem,\r\n    IonList,\r\n    IonMenuButton,\r\n    IonPage,\r\n    IonTitle,\r\n    IonToolbar} from '@ionic/react';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { CardType, getCardDetails, orderedCards } from '../cards';\r\nimport { CardImgAndDetails, CardName, LVCard, PlayerCharacter, PlayerCharacterName, PlayerDetails, PlayerState } from '../Shared';\r\nimport './Page.css';\r\nimport { clientApp } from '../ClientApp';\r\nimport { LVListenerList } from '../UIListeners';\r\n\r\nfunction PlayCard(props : {playerDetails : PlayerDetails[], playerId : number, handId: number, card : CardType, otherCard : CardType, discardedCardTotals: number[]})\r\n{\r\n    type PlayCardState = \"\" | \"PICK_TARGET\" | \"PICK_GUESS\";\r\n\r\n    const [playState, setPlayState] = useState<PlayCardState>(\"\");\r\n    const [pickedTarget, setPickedTarget] = useState<number>(-1);\r\n    const [waiting, setWaiting] = useState<boolean>(false);\r\n\r\n    function handlePlayCardClick()\r\n    {\r\n        var card = props.card;\r\n        if (card === \"GUARD\" ||\r\n            card === \"PRIEST\" ||\r\n            card === \"BARON\" ||\r\n            card === \"PRINCE\" ||\r\n            card === \"KING\")\r\n        {\r\n            setPlayState(\"PICK_TARGET\");\r\n        }\r\n        else\r\n        {\r\n            clientApp.playCard(props.handId);\r\n            setWaiting(true);\r\n        }\r\n    }\r\n\r\n    function handlePickTargetClick(targetId : number)\r\n    {\r\n        var card = props.card;\r\n        if (card === \"GUARD\")\r\n        {\r\n            setPickedTarget(targetId);\r\n            setPlayState(\"PICK_GUESS\");\r\n        }\r\n        else\r\n        {\r\n            clientApp.playCard(props.handId, targetId);\r\n            setWaiting(true);\r\n        }\r\n    }\r\n\r\n    function handleNoValidTargetClick()\r\n    {\r\n        clientApp.playCard(props.handId, -1);\r\n        setWaiting(true);\r\n    }\r\n\r\n    function handlePickGuessClick(guessCardType : CardType)\r\n    {\r\n        clientApp.playCard(props.handId, pickedTarget, guessCardType);\r\n        setWaiting(true);\r\n    }\r\n\r\n    function handleBackClick()\r\n    {\r\n        if (playState === \"PICK_GUESS\")\r\n        {\r\n            setPlayState(\"PICK_TARGET\");\r\n        }\r\n        else if (playState === \"PICK_TARGET\")\r\n        {\r\n            setPlayState(\"\");\r\n        }\r\n    }\r\n\r\n    if (playState === \"\")\r\n    {\r\n        if (props.otherCard === \"COUNTESS\" && (props.card === \"KING\" || props.card === \"PRINCE\"))\r\n        {\r\n            return (\r\n                <LVCard>\r\n                    <div className=\"cardPlayButtonDiv\">\r\n                        Must play <CardName card={\"COUNTESS\"} />\r\n                    </div>\r\n                </LVCard>\r\n            );\r\n        }\r\n        else\r\n        {\r\n            return (\r\n                <LVCard>\r\n                    <div className=\"cardPlayButtonDiv\">\r\n                        <IonButton onClick={handlePlayCardClick} disabled={waiting}>Play</IonButton>\r\n                    </div>\r\n                </LVCard>\r\n            );\r\n        }\r\n    }\r\n    else if (playState === \"PICK_TARGET\")\r\n    {\r\n        var anyValidTargets = false;\r\n        var targetList = props.playerDetails.map(function(playerDetails, index)\r\n            {\r\n                if (props.playerId === index && props.card !== \"PRINCE\")\r\n                    return null;\r\n\r\n                anyValidTargets = anyValidTargets || playerDetails.state === \"ALIVE\";\r\n                return (\r\n                    <IonItem key={playerDetails.name}>\r\n                        <div className=\"fullBox\">\r\n                            <div className=\"playerTopLine\">\r\n                                <span className=\"playerTopLineLeft\">\r\n                                    <PlayerCharacter playerDetails={playerDetails} />\r\n                                    <span className=\"playerName\">{playerDetails.name}</span>\r\n                                    <PlayerState status={playerDetails.state} />\r\n                                </span>\r\n                                {\r\n                                    playerDetails.state !== \"ALIVE\" ? null :\r\n                                        <span className=\"playerTopLineRight\">\r\n                                            <IonButton className=\"verticalAlignMiddle\" onClick={(e) => handlePickTargetClick(index)} disabled={waiting}>PICK</IonButton>\r\n                                        </span>\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    </IonItem>\r\n                );\r\n            }\r\n        );\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <LVCard>\r\n                    <div className=\"interactionText\">\r\n                        Pick a target\r\n                    </div>\r\n                </LVCard>\r\n                <LVCard>\r\n                    <IonList>\r\n                        {targetList}\r\n                        {anyValidTargets ? null :\r\n                            <IonItem>\r\n                                <div className=\"center\">\r\n                                    <IonButton onClick={handleNoValidTargetClick} disabled={waiting}>No valid target</IonButton>\r\n                                </div>\r\n                            </IonItem>\r\n                        }\r\n                    </IonList>\r\n                    <div className=\"cardPlayButtonDiv\">\r\n                        <IonButton onClick={handleBackClick}>Back</IonButton>\r\n                    </div>\r\n                </LVCard>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n    else if (playState === \"PICK_GUESS\")\r\n    {\r\n        var targetPlayerDetails = props.playerDetails[pickedTarget];\r\n        return (\r\n            <React.Fragment>\r\n                <LVCard>\r\n                    <div className=\"interactionText\">\r\n                        Guess what card <PlayerCharacterName playerDetails={targetPlayerDetails} /> has\r\n                    </div>\r\n                </LVCard>\r\n                <LVCard>\r\n                    <IonList>\r\n                        <IonItem>\r\n                            <div className=\"fullBox\">\r\n                                <div className=\"cardOptionLine\">\r\n                                    <span className=\"cardOptionRight\">\r\n                                        (# Played / # In Deck)\r\n                                    </span>\r\n                                </div>\r\n                            </div>\r\n                        </IonItem>\r\n                        {\r\n\r\n                            orderedCards.map((cardType : CardType, index) =>\r\n                                (cardType === \"GUARD\") ? null :\r\n                                <IonItem key={index}>\r\n                                    <div className=\"fullBox\">\r\n                                        <div className=\"cardOptionLine\">\r\n                                            <span className=\"cardOptionLeft\">\r\n                                                <CardName card={cardType} />\r\n                                            </span>\r\n                                            <span className=\"cardOptionRight\">\r\n                                                <IonButton disabled={waiting} className=\"verticalAlignMiddle\" onClick={(e) => handlePickGuessClick(cardType)}>\r\n                                                    Pick ({props.discardedCardTotals[index]} / {getCardDetails(cardType).numInDeck})\r\n                                                </IonButton>\r\n                                            </span>\r\n                                        </div>\r\n                                    </div>\r\n                                </IonItem>\r\n                            )\r\n                        }\r\n                        <div className=\"cardPlayButtonDiv\">\r\n                            <IonButton onClick={handleBackClick}>Back</IonButton>\r\n                        </div>\r\n                    </IonList>\r\n                </LVCard>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n    return null;\r\n}\r\n\r\nfunction CardPage(props: {handId: number})\r\n{\r\n    const [hand, setHand] = useState<CardType[]>(clientApp.getUiProperty(\"hand\"));\r\n    const [playerDetails, setPlayerDetails] = useState<PlayerDetails[]>(clientApp.getUiProperty(\"playerDetails\"));\r\n    const [playerId, setPlayerId] = useState<number>(clientApp.getUiProperty(\"playerId\"));\r\n    const [turnId, setTurnId] = useState<number>(clientApp.getUiProperty(\"turnId\"));\r\n    const [discardedCardTotals, setDiscardedCardTotals] = useState<number[]>(clientApp.getUiProperty(\"discardedCardTotals\"));\r\n\r\n    useEffect(() => {\r\n        var listeners = new LVListenerList(\"card\");\r\n        listeners.onPropertyChange(\"hand\", function(value : CardType[]) { setHand(value); });\r\n        listeners.onPropertyChange(\"playerDetails\", function(value : PlayerDetails[]) { setPlayerDetails(value); });\r\n        listeners.onPropertyChange(\"discardedCardTotals\", function(value : number[]) { setDiscardedCardTotals(value); });\r\n        listeners.onPropertyChange(\"playerId\", function(value : number) { setPlayerId(value); });\r\n        listeners.onPropertyChange(\"turnId\", function(value : number) { setTurnId(value); });\r\n        return clientApp.effectListeners(listeners);\r\n    }, []);\r\n\r\n    var handId = props.handId;\r\n\r\n    var content;\r\n    var title;\r\n    if (handId >= hand.length)\r\n    {\r\n        title = <>No card</>;\r\n        content = null;\r\n    }\r\n    else\r\n    {\r\n        title = <CardName card={hand[handId]}></CardName>;\r\n        content = (\r\n        <>\r\n            <LVCard>\r\n            <CardImgAndDetails card={hand[handId]}/>\r\n            </LVCard>\r\n            {\r\n                turnId !== playerId ? null :\r\n                <PlayCard playerDetails={playerDetails} playerId={playerId} handId={handId} card={hand[handId]} otherCard={hand[handId === 0 ? 1 : 0]} discardedCardTotals={discardedCardTotals}></PlayCard>\r\n            }\r\n        </>);\r\n    }\r\n\r\n    return (\r\n    <IonPage>\r\n        <IonContent fullscreen>\r\n            <IonHeader>\r\n                <IonToolbar>\r\n                    <IonButtons slot=\"start\">\r\n                        <IonMenuButton />\r\n                    </IonButtons>\r\n                    <IonTitle>{title}</IonTitle>\r\n                </IonToolbar>\r\n            </IonHeader>\r\n            {content}\r\n        </IonContent>\r\n    </IonPage>\r\n    );\r\n};\r\n\r\nexport default CardPage;","import { IonButton, IonButtons, IonContent, IonHeader, IonMenuButton, IonPage, IonTitle, IonToolbar } from '@ionic/react';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { CardType } from '../cards';\r\nimport { clientApp } from '../ClientApp';\r\nimport { CardImgAndDetails, CardName, DotDotDot, Interaction, InteractionCard, LVCard, PlayerCharacterName, PlayerDetails, PlayerState } from '../Shared';\r\nimport { LVListenerList } from '../UIListeners';\r\nimport './Page.css';\r\n\r\nfunction PlayerDiscard(props : { playerDetails : PlayerDetails, card : CardType })\r\n{\r\n    return (\r\n        <React.Fragment>\r\n            <InteractionCard>\r\n                <PlayerCharacterName playerDetails={props.playerDetails} /> discarded\r\n            </InteractionCard>\r\n            <LVCard>\r\n                <CardImgAndDetails card={props.card} />\r\n            </LVCard>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nfunction PlayerEliminated(props : { playerDetails : PlayerDetails })\r\n{\r\n    return (\r\n        <InteractionCard>\r\n            <PlayerCharacterName playerDetails={props.playerDetails} /> has been eliminated!\r\n            <PlayerState status=\"DEAD\" />\r\n        </InteractionCard>\r\n    );\r\n}\r\n\r\nfunction SecretReveal(props : { playerDetails : PlayerDetails, card : CardType })\r\n{\r\n    return (\r\n        <React.Fragment>\r\n            <InteractionCard>\r\n                <PlayerCharacterName playerDetails={props.playerDetails} /> secretly reveals\r\n            </InteractionCard>\r\n            <LVCard>\r\n                <CardImgAndDetails card={props.card} />\r\n            </LVCard>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nfunction InteractionContent()\r\n{\r\n    const [playerDetails, setPlayerDetails] = useState<PlayerDetails[]>(clientApp.getUiProperty(\"playerDetails\"));\r\n    const [playerId, setPlayerId] = useState<number>(clientApp.getUiProperty(\"playerId\"));\r\n    const [turnId, setTurnId] = useState<number>(clientApp.getUiProperty(\"turnId\"));\r\n    const [interaction, setInteraction] = useState<Interaction>(clientApp.getUiProperty(\"interaction\"));\r\n\r\n    useEffect(() => {\r\n        var listeners = new LVListenerList(\"interaction\");\r\n        listeners.onPropertyChange(\"playerDetails\", function(value : PlayerDetails[]) { setPlayerDetails(value); });\r\n        listeners.onPropertyChange(\"playerId\", function(value : number) { setPlayerId(value); });\r\n        listeners.onPropertyChange(\"turnId\", function(value : number) { setTurnId(value); });\r\n        listeners.onPropertyChange(\"interaction\", function(value : Interaction) { setInteraction(value); });\r\n        return clientApp.effectListeners(listeners);\r\n    }, []);\r\n\r\n    if (interaction.status !== \"REVEAL\" && interaction.status !== \"CONTINUE\")\r\n    {\r\n        if (playerDetails !== undefined && turnId !== undefined && turnId >= 0 && turnId < playerDetails.length)\r\n        {\r\n            return <InteractionCard>Waiting for <PlayerCharacterName playerDetails={playerDetails[turnId]!} /></InteractionCard>;\r\n        }\r\n        else\r\n        {\r\n            return <InteractionCard>Waiting for something to happen...</InteractionCard>;\r\n        }\r\n    }\r\n\r\n    var turnPlayerDetails = playerDetails[interaction.playerId];\r\n    var targetPlayerDetails : PlayerDetails | null = null;\r\n    var hasTarget : boolean = interaction.targetId !== undefined && interaction.targetId !== -1;\r\n    if (hasTarget)\r\n    {\r\n        targetPlayerDetails = playerDetails[interaction.targetId!];\r\n    }\r\n\r\n    function handleEndTurn()\r\n    {\r\n        clientApp.interactionStep();\r\n    }\r\n\r\n    function handleReveal()\r\n    {\r\n        clientApp.interactionStep();\r\n    }\r\n\r\n    var interactionBlock;\r\n    var waitingText = '';\r\n\r\n    if (interaction.playedCard === \"GUARD\")\r\n    {\r\n        if (hasTarget)\r\n        {\r\n            interactionBlock = (\r\n                <InteractionCard>\r\n                    To target <PlayerCharacterName playerDetails={targetPlayerDetails!} />\r\n                    and guessed<span className=\"hspacer\"></span><CardName card={interaction.guess!} />\r\n                </InteractionCard>\r\n            );\r\n            waitingText = \"Waiting for the big reveal\";\r\n        }\r\n        else\r\n        {\r\n            interactionBlock = (\r\n                <InteractionCard>\r\n                    But there is nobody to target\r\n                </InteractionCard>\r\n            );\r\n        }\r\n    }\r\n    else if (interaction.playedCard === \"PRIEST\" ||\r\n             interaction.playedCard === \"BARON\" ||\r\n             interaction.playedCard === \"PRINCE\" ||\r\n             interaction.playedCard === \"KING\")\r\n    {\r\n        if (hasTarget)\r\n        {\r\n            interactionBlock = (\r\n                <InteractionCard>\r\n                    To target <PlayerCharacterName playerDetails={targetPlayerDetails!} />\r\n                </InteractionCard>\r\n            );\r\n            waitingText = \"Waiting for the big reveal\";\r\n        }\r\n        else\r\n        {\r\n            interactionBlock = (\r\n                <InteractionCard>\r\n                    But there is nobody to target\r\n                </InteractionCard>\r\n            );\r\n        }\r\n    }\r\n    else if (interaction.playedCard === \"PRINCESS\")\r\n    {\r\n        interactionBlock = (\r\n            <PlayerEliminated playerDetails={turnPlayerDetails} />\r\n        );\r\n    }\r\n\r\n    var endTurn = null;\r\n    var otherDetails = null;\r\n    if (interaction.status === \"REVEAL\" && interaction.targetId === playerId)\r\n    {\r\n        // TODO these states!\r\n        otherDetails = (\r\n            <InteractionCard>\r\n                <IonButton onClick={handleReveal}>Reveal</IonButton>\r\n            </InteractionCard>\r\n        );\r\n    }\r\n    else if (interaction.status === \"CONTINUE\")\r\n    {\r\n        if (interaction.playerId === playerId)\r\n        {\r\n            endTurn = (\r\n                <InteractionCard>\r\n                    <IonButton onClick={handleEndTurn}>End Turn</IonButton>\r\n                </InteractionCard>\r\n            );\r\n        }\r\n        else\r\n        {\r\n            endTurn = (\r\n                <LVCard>\r\n                    <div className=\"interactionText\">\r\n                        Waiting for turn to end\r\n                    </div>\r\n                    <div className=\"interactionDots\">\r\n                        <DotDotDot />\r\n                    </div>\r\n                </LVCard>\r\n            );\r\n        }\r\n\r\n        if (interaction.playedCard === \"GUARD\" && hasTarget)\r\n        {\r\n            if (interaction.result === \"CORRECT_GUESS\")\r\n            {\r\n                otherDetails = (\r\n                    <React.Fragment>\r\n                        <PlayerDiscard playerDetails={targetPlayerDetails!} card={interaction.guess!} />\r\n                        <PlayerEliminated playerDetails={targetPlayerDetails!} />\r\n                    </React.Fragment>\r\n                );\r\n            }\r\n            else\r\n            {\r\n                otherDetails = (\r\n                    <InteractionCard>\r\n                        The guess was incorrect\r\n                    </InteractionCard>\r\n                );\r\n            }\r\n        }\r\n        else if (interaction.playedCard === \"PRIEST\" && hasTarget)\r\n        {\r\n            if (interaction.playerId === playerId || interaction.targetId === playerId)\r\n            {\r\n                otherDetails = (\r\n                    <React.Fragment>\r\n                        <SecretReveal playerDetails={targetPlayerDetails!} card={interaction.revealedCard!} />\r\n                    </React.Fragment>\r\n                );\r\n            }\r\n            else\r\n            {\r\n                otherDetails = (\r\n                    <React.Fragment>\r\n                        <InteractionCard>\r\n                            <PlayerCharacterName playerDetails={targetPlayerDetails!} /> has secretly revealed their card\r\n                        </InteractionCard>\r\n                    </React.Fragment>\r\n                );\r\n            }\r\n        }\r\n        else if (interaction.playedCard === \"BARON\" && hasTarget)\r\n        {\r\n            var winner : number = interaction.loserId === interaction.playerId ? interaction.targetId! : interaction.playerId;\r\n            var winnerPlayerDetails = playerDetails[winner];\r\n            var loserPlayerDetails = playerDetails[interaction.loserId!];\r\n\r\n            if (interaction.playerId === playerId || interaction.targetId === playerId)\r\n            {\r\n                if (interaction.result === \"TIE\")\r\n                {\r\n                    otherDetails = (\r\n                        <React.Fragment>\r\n                            <SecretReveal playerDetails={turnPlayerDetails} card={interaction.revealedCard!} />\r\n                            <SecretReveal playerDetails={targetPlayerDetails!} card={interaction.revealedCard!} />\r\n                            <InteractionCard>\r\n                                Its a tie! (nothing happens)\r\n                            </InteractionCard>\r\n                        </React.Fragment>\r\n                    );\r\n                }\r\n                else\r\n                {\r\n                    var baronTurnPlayerCard : CardType = playerId === interaction.playerId ? interaction.otherCard! : interaction.revealedCard!;\r\n                    var baronTargetPlayerCard : CardType = playerId === interaction.targetId ? interaction.otherCard! : interaction.revealedCard!;\r\n                    otherDetails = (\r\n                        <React.Fragment>\r\n                            <SecretReveal playerDetails={turnPlayerDetails} card={baronTurnPlayerCard} />\r\n                            <SecretReveal playerDetails={targetPlayerDetails!} card={baronTargetPlayerCard} />\r\n                            <InteractionCard>\r\n                                <PlayerCharacterName playerDetails={winnerPlayerDetails} /> wins!\r\n                            </InteractionCard>\r\n                            <PlayerEliminated playerDetails={loserPlayerDetails} />\r\n                        </React.Fragment>\r\n                    );\r\n                }\r\n            }\r\n            else\r\n            {\r\n                if (interaction.result === \"TIE\")\r\n                {\r\n                    otherDetails = (\r\n                        <InteractionCard>\r\n                            Its a tie! (nothing happens)\r\n                        </InteractionCard>\r\n                    );\r\n                }\r\n                else\r\n                {\r\n                    otherDetails = (\r\n                        <React.Fragment>\r\n                            <InteractionCard>\r\n                                <PlayerCharacterName playerDetails={winnerPlayerDetails} /> wins!\r\n                            </InteractionCard>\r\n                            <PlayerDiscard playerDetails={loserPlayerDetails} card={interaction.discard!} />\r\n                            <PlayerEliminated playerDetails={loserPlayerDetails} />\r\n                        </React.Fragment>\r\n                    );\r\n                }\r\n            }\r\n        }\r\n        else if (interaction.playedCard === \"PRINCE\" && hasTarget)\r\n        {\r\n            otherDetails = (\r\n                <React.Fragment>\r\n                    <PlayerDiscard playerDetails={targetPlayerDetails!} card={interaction.revealedCard!} />\r\n                    {\r\n                        interaction.revealedCard !== \"PRINCESS\" ? null :\r\n                        <PlayerEliminated playerDetails={targetPlayerDetails!} />\r\n                    }\r\n                </React.Fragment>\r\n            );\r\n        }\r\n        else if (interaction.playedCard === \"KING\" && hasTarget)\r\n        {\r\n            if (interaction.playerId === playerId || interaction.targetId === playerId)\r\n            {\r\n                var kingTurnPlayerCard : CardType = playerId === interaction.playerId ? interaction.otherCard! : interaction.swappedFor!;\r\n                var kingTargetPlayerCard : CardType = playerId === interaction.targetId ? interaction.prevCard! : interaction.swappedFor!;\r\n                otherDetails = (\r\n                    <React.Fragment>\r\n                        <SecretReveal playerDetails={turnPlayerDetails} card={kingTurnPlayerCard} />\r\n                        <SecretReveal playerDetails={targetPlayerDetails!} card={kingTargetPlayerCard} />\r\n                        <InteractionCard>\r\n                            <PlayerCharacterName playerDetails={turnPlayerDetails} /> now has <span className=\"hspacer\"></span><CardName card={kingTargetPlayerCard}/>\r\n                        </InteractionCard>\r\n                        <InteractionCard>\r\n                            <PlayerCharacterName playerDetails={targetPlayerDetails!} /> now has <span className=\"hspacer\"></span><CardName card={kingTurnPlayerCard}/>\r\n                        </InteractionCard>\r\n                    </React.Fragment>\r\n                );\r\n            }\r\n        }\r\n    }\r\n    else\r\n    {\r\n        otherDetails = (\r\n            <LVCard>\r\n                <div className=\"interactionText\">\r\n                    {waitingText}\r\n                </div>\r\n                <div className=\"interactionDots\">\r\n                    <DotDotDot />\r\n                </div>\r\n            </LVCard>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <LVCard>\r\n                <div className=\"interactionText\">\r\n                    <PlayerCharacterName playerDetails={turnPlayerDetails} /> played\r\n                </div>\r\n            </LVCard>\r\n\r\n            <LVCard>\r\n                <CardImgAndDetails card={interaction.playedCard} />\r\n            </LVCard>\r\n\r\n            {interactionBlock}\r\n            {otherDetails}\r\n            {endTurn}\r\n\r\n            <div className=\"scrollHack\"></div>\r\n        </>\r\n    );\r\n}\r\n\r\n\r\nconst InteractionPage: React.FC = () => {\r\n    return (\r\n        <IonPage>\r\n            <IonContent fullscreen>\r\n                <IonHeader>\r\n                    <IonToolbar>\r\n                        <IonButtons slot=\"start\">\r\n                            <IonMenuButton />\r\n                        </IonButtons>\r\n                        <IonTitle>Action</IonTitle>\r\n                    </IonToolbar>\r\n                </IonHeader>\r\n                <InteractionContent />\r\n            </IonContent>\r\n        </IonPage>\r\n    );\r\n}\r\n\r\nexport default InteractionPage;","import {\r\n    IonIcon,\r\n    IonLabel,\r\n    IonRouterOutlet,\r\n    IonTabBar,\r\n    IonTabButton,\r\n    IonTabs} from '@ionic/react';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Redirect, Route } from 'react-router';\r\nimport './Page.css';\r\nimport { caretForwardCircleOutline, accessibilityOutline, tabletPortraitOutline } from 'ionicons/icons';\r\nimport GamePage from './GamePage';\r\nimport CardPage from './CardPage';\r\nimport { CardName, PlayerDetails, PlayerState } from '../Shared';\r\nimport { CardType } from '../cards';\r\nimport { clientApp } from '../ClientApp';\r\nimport { LVListenerList } from '../UIListeners';\r\nimport InteractionPage from './InteractionPage';\r\n\r\nconst GameTabPage: React.FC = () => {\r\n\r\n    const [hand, setHand] = useState<CardType[]>(clientApp.getUiProperty(\"hand\"));\r\n    const [playerDetails, setPlayerDetails] = useState<PlayerDetails[]>(clientApp.getUiProperty(\"playerDetails\"));\r\n    const [playerId, setPlayerId] = useState<number>(clientApp.getUiProperty(\"playerId\"));\r\n    \r\n    useEffect(() => {\r\n        var listeners = new LVListenerList(\"game\");\r\n        listeners.onPropertyChange(\"hand\", function(value) { setHand(value); });\r\n        listeners.onPropertyChange(\"playerDetails\", function(value : PlayerDetails[]) { setPlayerDetails(value); });\r\n        listeners.onPropertyChange(\"playerId\", function(value : number) { setPlayerId(value); });\r\n        return clientApp.effectListeners(listeners);\r\n    }, []);\r\n\r\n    var cardIcon = <IonIcon icon={tabletPortraitOutline} />;\r\n    var isDead = false;\r\n    if (playerDetails && playerId !== undefined && playerId >= 0 && playerId < playerDetails.length)\r\n    {\r\n        if (playerDetails[playerId].state === \"DEAD\")\r\n        {\r\n            cardIcon = <PlayerState status=\"DEAD\"></PlayerState>;\r\n            isDead = true;\r\n        }\r\n    }\r\n\r\n    return (\r\n    <IonTabs>\r\n        <IonRouterOutlet>\r\n            <Redirect exact path=\"/tabs\" to=\"/tabs/game\" />\r\n            <Redirect exact path=\"/\" to=\"/tabs/game\" />\r\n            <Route path=\"/tabs/game\" render={() => <GamePage />} exact />\r\n            <Route path=\"/tabs/card/0\" render={() => <CardPage handId={0} />} exact />\r\n            <Route path=\"/tabs/card/1\" render={() => <CardPage handId={1} />} exact />\r\n            <Route path=\"/tabs/interaction\" render={() => <InteractionPage />} exact />\r\n        </IonRouterOutlet>\r\n        <IonTabBar slot=\"bottom\">\r\n            <IonTabButton tab=\"interaction\" href=\"/tabs/interaction\">\r\n                <IonIcon icon={caretForwardCircleOutline} />\r\n                <IonLabel>Action</IonLabel>\r\n            </IonTabButton>\r\n            <IonTabButton tab=\"game\" href=\"/tabs/game\">\r\n                <IonIcon icon={accessibilityOutline} />\r\n                <IonLabel>Players</IonLabel>\r\n            </IonTabButton>\r\n            {\r\n                <IonTabButton tab=\"card0\" href=\"/tabs/card/0\" disabled={isDead}>\r\n                    {cardIcon}\r\n                    {\r\n                        isDead ? \"DEAD\" : (\r\n                            hand.length === 0 ? \"None\" :\r\n                            <CardName card={hand[0]}></CardName>)\r\n                    }\r\n                </IonTabButton>\r\n            }\r\n            {\r\n                hand.length <= 1 ? \"None\" :\r\n                <IonTabButton tab=\"card1\" href=\"/tabs/card/1\">\r\n                    <IonIcon icon={tabletPortraitOutline} />\r\n                    <CardName card={hand[1]}></CardName>\r\n                </IonTabButton>\r\n            }\r\n        </IonTabBar>\r\n    </IonTabs>\r\n    );\r\n};\r\n\r\nexport default GameTabPage;\r\n","import {\r\n    IonButtons, \r\n    IonContent, \r\n    IonHeader,\r\n    IonMenuButton,\r\n    IonPage,\r\n    IonTitle,\r\n    IonToolbar,\r\n    IonSlides,\r\n    IonSlide,\r\n    IonButton} from '@ionic/react';\r\nimport React, { useEffect, useRef, useState } from 'react';\r\nimport { getCardDetails, orderedCards } from '../cards';\r\nimport './Page.css';\r\nimport { CardImgAndDetails, CardName, DiscardedCardTotals, LVCard } from '../Shared'\r\nimport { clientApp } from '../ClientApp';\r\nimport { LVListenerList } from '../UIListeners';\r\n\r\ntype GotoSlideCb = (index : number) => void;\r\n\r\nfunction QuickHelpList(props : {discardedCardTotals: DiscardedCardTotals, gotoSlideCb : GotoSlideCb})\r\n{\r\n    function handleClick(index : number)\r\n    {\r\n        props.gotoSlideCb(index + 1);\r\n    }\r\n\r\n    return <>{\r\n        orderedCards.map((cardType, index) =>\r\n        <div key={cardType} onClick={() => handleClick(index)}>\r\n            <span className=\"alignLeft\"><CardName card={cardType} /></span>\r\n            <span className=\"alignRight\">{props.discardedCardTotals[index]} / {getCardDetails(cardType).numInDeck}</span>\r\n            <br />\r\n            <br />\r\n        </div>\r\n    )}</>;\r\n}\r\n\r\nfunction QuickHelpCard(props : {discardedCardTotals: DiscardedCardTotals, gotoSlideCb : GotoSlideCb})\r\n{\r\n    return (\r\n        <LVCard>\r\n            <span className=\"alignLeft\">Card (value)</span>\r\n            <span className=\"alignRight\"># Discarded / # In Deck</span><br/><br/>\r\n            <QuickHelpList discardedCardTotals={props.discardedCardTotals} gotoSlideCb={props.gotoSlideCb} />\r\n        </LVCard>\r\n    );\r\n}\r\n\r\nfunction HelpCardItems(props : {gotoSlideCb : GotoSlideCb})\r\n{\r\n    function handleClick()\r\n    {\r\n        props.gotoSlideCb(0);\r\n    }\r\n\r\n    return (<>{orderedCards.map((cardType, index) =>\r\n        <IonSlide key={cardType}>\r\n            <LVCard>\r\n                <CardImgAndDetails card={cardType} />\r\n                <IonButton onClick={handleClick}>Back</IonButton>\r\n            </LVCard>\r\n        </IonSlide>\r\n    )}</>)\r\n}\r\n\r\nconst HelpPage: React.FC = () => {\r\n    \r\n    const [discardedCardTotals, setDiscardedCardTotals] = useState<number[]>(clientApp.getUiProperty(\"discardedCardTotals\"));\r\n    \r\n    useEffect(() => {\r\n        var listeners = new LVListenerList(\"help\");\r\n        listeners.onPropertyChange(\"discardedCardTotals\", function(value : number[]) { setDiscardedCardTotals(value); });\r\n        return clientApp.effectListeners(listeners);\r\n    }, []);\r\n\r\n    const slidesRef = useRef<HTMLIonSlidesElement>(null);\r\n\r\n    const handleGotoSlideCb = function (index : number)\r\n    {\r\n        slidesRef.current?.slideTo(index);\r\n    }\r\n\r\n    return (\r\n    <IonPage>\r\n        <IonHeader>\r\n            <IonToolbar>\r\n                <IonButtons slot=\"start\">\r\n                    <IonMenuButton />\r\n                </IonButtons>\r\n                <IonTitle>Help</IonTitle>\r\n            </IonToolbar>\r\n        </IonHeader>\r\n\r\n        <IonContent fullscreen>\r\n        <IonSlides ref={slidesRef}>\r\n            <IonSlide>\r\n                <QuickHelpCard discardedCardTotals={discardedCardTotals} gotoSlideCb={handleGotoSlideCb} />\r\n            </IonSlide>\r\n            <HelpCardItems gotoSlideCb={handleGotoSlideCb}/>\r\n        </IonSlides>\r\n        </IonContent>\r\n    </IonPage>\r\n    );\r\n};\r\n\r\nexport default HelpPage;\r\n","import React, { useState } from 'react';\nimport { IonContent, IonHeader, IonPage, IonTitle, IonToolbar, IonInput, IonItem, IonLabel, IonList, IonItemDivider } from '@ionic/react';\n\nexport const InputExamples: React.FC = () => {\n\n  const [text, setText] = useState<string>();\n  const [number, setNumber] = useState<number>();\n\n  return (\n    <IonPage>\n      <IonHeader>\n        <IonToolbar>\n          <IonTitle>IonInput Examples</IonTitle>\n        </IonToolbar>\n      </IonHeader>\n      <IonContent>\n        <IonList>\n          <IonItemDivider>Default Input with Placeholder</IonItemDivider>\n          <IonItem>\n            <IonInput value={text} placeholder=\"Enter Input\" onIonChange={e => setText(e.detail.value!)}></IonInput>\n          </IonItem>\n\n          <IonItemDivider>Input with clear button when there is a value</IonItemDivider>\n          <IonItem>\n            <IonInput value={text} placeholder=\"Enter Input\" onIonChange={e => setText(e.detail.value!)} clearInput></IonInput>\n          </IonItem>\n\n          <IonItemDivider>Number type input</IonItemDivider>\n          <IonItem>\n            <IonInput type=\"number\" value={number} placeholder=\"Enter Number\" onIonChange={e => setNumber(parseInt(e.detail.value!, 10))}></IonInput>\n          </IonItem>\n\n          <IonItemDivider>Disabled input</IonItemDivider>\n          <IonItem>\n            <IonInput value={text} disabled></IonInput>\n          </IonItem>\n\n          <IonItemDivider>Readonly input</IonItemDivider>\n          <IonItem>\n            <IonInput value={text} readonly></IonInput>\n          </IonItem>\n\n          <IonItemDivider>Inputs with labels</IonItemDivider>\n\n          <IonItem>\n            <IonLabel>Default Label</IonLabel>\n            <IonInput></IonInput>\n          </IonItem>\n\n          <IonItem>\n            <IonLabel position=\"floating\">Floating Label</IonLabel>\n            <IonInput value={text}></IonInput>\n          </IonItem>\n\n          <IonItem>\n            <IonLabel position=\"fixed\">Fixed Label</IonLabel>\n            <IonInput value={text}></IonInput>\n          </IonItem>\n\n          <IonItem>\n            <IonLabel position=\"stacked\">Stacked Label</IonLabel>\n            <IonInput value={text}> </IonInput>\n          </IonItem>\n        </IonList>\n      </IonContent>\n    </IonPage>\n  );\n};","import {\r\n    IonButton,\r\n    IonButtons, \r\n    IonContent, \r\n    IonHeader,\r\n    IonMenuButton,\r\n    IonPage,\r\n    IonTitle,\r\n    IonToolbar} from '@ionic/react';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { charactersMap } from '../charactermap';\r\nimport { clientApp } from '../ClientApp';\r\nimport { LVListenerList } from '../UIListeners';\r\nimport './Page.css';\r\n\r\nfunction PickCharacterElement(props : {id: number, img : string, isAlreadyPicked: boolean, isSelected: boolean, isPicked: boolean, pickedCharacterCb: (value : number) => void})\r\n{\r\n    function handleClick()\r\n    {\r\n        props.pickedCharacterCb(props.id);\r\n    }\r\n\r\n    return (\r\n        <div className={props.isAlreadyPicked ? \"characterGridCellAlreadyPicked\" :\r\n                        props.isSelected ? \"characterGridCellSelected\" :\r\n                        props.isPicked ? \"characterGridCellPicked\" : \"characterGridCell\"} onClick={handleClick}>\r\n            <img src={\"img/characters/\" + props.img} className=\"characterImg\" onClick={handleClick} alt=\"lol\"/>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction PickCharacterElements(props : {selectedCharacterId: number, alreadyPickedIds: number[], pickedCharacterId: number, pickedCharacterCb: (value : number) => void})\r\n{\r\n    return <>{\r\n        charactersMap.map((characterImg, index) =>\r\n            <PickCharacterElement\r\n                key={index}\r\n                id={index}\r\n                img={characterImg}\r\n                isSelected={props.selectedCharacterId === index}\r\n                isAlreadyPicked={props.alreadyPickedIds.indexOf(index) !== -1}\r\n                isPicked={props.pickedCharacterId === index}\r\n                pickedCharacterCb={props.pickedCharacterCb}\r\n                />\r\n        )\r\n    }</>\r\n}\r\n\r\nconst PickCharacterPage: React.FC = () => {\r\n    const [selectedCharacterId, setSelectedCharacterId] = useState<number>(clientApp.getUiProperty(\"pickedCharacterId\"));\r\n    const [alreadyPickedIds, setAlreadyPickedIds] = useState<number[]>(clientApp.getUiProperty(\"alreadyPickedIds\"));\r\n    const [pickedCharacterId, setPickedCharacterId] = useState<number>(clientApp.getUiProperty(\"pickedCharacterId\"));\r\n    const [pickDisabled, setPickDisabled] = useState<boolean>(false);\r\n\r\n    useEffect(() => {\r\n        var listeners = new LVListenerList(\"pickCharacter\");\r\n        listeners.onPropertyChange(\"pickedCharacterId\", function(value) { setPickedCharacterId(value); setSelectedCharacterId(value); });\r\n        listeners.onPropertyChange(\"alreadyPickedIds\", (v : number[]) => setAlreadyPickedIds(v));\r\n        listeners.onEvent(\"pickedCharacterInUse\", function () { setPickDisabled(false); });\r\n        return clientApp.effectListeners(listeners);\r\n    }, []);\r\n\r\n    function handlePickClick()\r\n    {\r\n        setPickDisabled(true);\r\n        clientApp.pickCharacter(selectedCharacterId);\r\n    }\r\n\r\n    function handleCharacterClick(characterId : number)\r\n    {\r\n        setSelectedCharacterId(characterId);\r\n        if (pickedCharacterId !== -1 && characterId !== pickedCharacterId)\r\n        {\r\n            clientApp.clearPickedCharacter();\r\n        }\r\n    }\r\n\r\n    return (\r\n    <IonPage>\r\n        <IonHeader>\r\n            <IonToolbar>\r\n                <IonButtons slot=\"start\">\r\n                    <IonMenuButton />\r\n                </IonButtons>\r\n                <IonTitle>\r\n                    <IonButton\r\n                        disabled={selectedCharacterId === -1 || (pickedCharacterId !== selectedCharacterId && alreadyPickedIds.indexOf(selectedCharacterId) !== -1) || pickDisabled}\r\n                        onClick={handlePickClick}\r\n                        >\r\n                        Pick Character\r\n                    </IonButton>\r\n                </IonTitle>\r\n            </IonToolbar>\r\n        </IonHeader>\r\n\r\n        <IonContent fullscreen>\r\n            <div>\r\n                <div className=\"grid\">\r\n                    <PickCharacterElements selectedCharacterId={selectedCharacterId} alreadyPickedIds={alreadyPickedIds} pickedCharacterId={pickedCharacterId} pickedCharacterCb={handleCharacterClick}/>\r\n                </div>\r\n                <div>Icons made by <a href=\"https://www.flaticon.com/authors/freepik\" title=\"Freepik\">Freepik</a> from <a href=\"https://www.flaticon.com/\" title=\"Flaticon\">www.flaticon.com</a></div>\r\n            </div>\r\n        </IonContent>\r\n    </IonPage>\r\n    );\r\n};\r\n\r\nexport default PickCharacterPage;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { IonContent, IonHeader, IonPage, IonTitle, IonToolbar, IonInput, IonItem, IonList, IonButton, IonToast } from '@ionic/react';\r\nimport { clientApp } from '../ClientApp';\r\nimport { LVListenerList } from '../UIListeners';\r\n\r\nexport const LoginPage: React.FC = () => {\r\n\r\n    const [name, setName] = useState<string>(clientApp.getUiProperty(\"username\"));\r\n    const [room, setRoom] = useState<string>(clientApp.getUiProperty(\"roomcode\"));\r\n    const [joiningRoom, setJoiningRoom] = useState<string>(\"\");\r\n    const [createRoomEnable, setCreateRoomEnable] = useState<boolean>(true);\r\n    const [joinRoomEnable, setJoinRoomEnable] = useState<boolean>(true);\r\n    const [showToast, setShowToast] = useState<boolean>(false);\r\n\r\n    useEffect(() => {\r\n        var listeners = new LVListenerList(\"login\");\r\n        listeners.onPropertyChange(\"roomcode\", (value : string) => { setRoom(value); });\r\n        listeners.onEvent(\"connectionError\", function()\r\n        {\r\n            setShowToast(true);\r\n            setJoinRoomEnable(true);\r\n            setCreateRoomEnable(true);\r\n        });\r\n        listeners.onEvent(\"leaveRoom\", function()\r\n        {\r\n            setJoinRoomEnable(true);\r\n            setCreateRoomEnable(true);\r\n        });\r\n        return clientApp.effectListeners(listeners);\r\n    }, []);\r\n\r\n    function joinRoom()\r\n    {\r\n        clientApp.joinRoom(name, room);\r\n        setJoinRoomEnable(false);\r\n        setJoiningRoom(room);\r\n    }\r\n    function createRoom()\r\n    {\r\n        setRoom(\"\");\r\n        clientApp.createRoom();\r\n        setCreateRoomEnable(false);\r\n    }\r\n    \r\n    return (\r\n        <IonPage>\r\n            <IonHeader>\r\n                <IonToolbar>\r\n                    <IonTitle>Loveletter</IonTitle>\r\n                </IonToolbar>\r\n            </IonHeader>\r\n            <IonContent>\r\n                <IonList>\r\n                    <IonItem>\r\n                        <IonInput value={name} placeholder=\"NAME\" onIonChange={e => setName(e.detail.value!)} clearInput maxlength={15}></IonInput>\r\n                    </IonItem>\r\n                    <IonItem>\r\n                        <IonInput value={room} placeholder=\"ROOM CODE\" onIonChange={e => setRoom(e.detail.value!)} clearInput maxlength={4} autocapitalize=\"characters\" className=\"uppercase-input\"></IonInput>\r\n                        <IonButton onClick={joinRoom} disabled={!joinRoomEnable || room.length < 4 || name.length < 3}>Join Room</IonButton>\r\n                        <IonButton onClick={createRoom} disabled={!createRoomEnable}>Create Room</IonButton>\r\n                    </IonItem>\r\n                </IonList>\r\n                <IonToast\r\n                    isOpen={showToast}\r\n                    onDidDismiss={() => setShowToast(false)}\r\n                    message={\"Failed connecting to room code \" + joiningRoom + \".\"}\r\n                    duration={5000}\r\n                />\r\n            </IonContent>\r\n            \r\n        </IonPage>\r\n    );\r\n};","import { IonButton, IonButtons, IonContent, IonHeader, IonItem, IonList, IonMenuButton, IonPage, IonTitle, IonToolbar } from '@ionic/react';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { CardType, tokensToWinMap } from '../cards';\r\nimport { clientApp } from '../ClientApp';\r\nimport { CardName, Interaction, InteractionCard, PlayerCharacterName, PlayerDetails, PlayerState } from '../Shared';\r\nimport { LVListenerList } from '../UIListeners';\r\nimport { Tokens } from './GamePage';\r\nimport './Page.css';\r\n\r\nfunction RoundEndPlayersListItem(props : {playerDetails : PlayerDetails, finalCard : CardType | null})\r\n{\r\n    return (\r\n        <div className=\"roundEndPlayerLine\">\r\n            <div className=\"alignLeft\">\r\n                <PlayerCharacterName playerDetails={props.playerDetails} />\r\n            </div>\r\n            {\r\n                props.playerDetails.state === \"DEAD\" ?\r\n                    <div className=\"roundEndPlayerStatus\">\r\n                        <span className=\"middlerHack\"></span>\r\n                        <PlayerState status=\"DEAD\" />\r\n                    </div>\r\n                : (!props.finalCard ? null :\r\n                    <div className=\"alignRight\">\r\n                        <span className=\"middlerHack\"></span>\r\n                        <span className=\"hspacer\"></span><CardName card={props.finalCard!}/>\r\n                    </div>)\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction RoundEndPlayersList(props : {playerDetails : PlayerDetails[], finalCards : CardType[]})\r\n{\r\n    return (<>\r\n        {\r\n            props.playerDetails.map((playerDetails, index) =>\r\n            <IonItem key={index}>\r\n                <RoundEndPlayersListItem finalCard={props.finalCards.length > 0 ? props.finalCards[index] : null} playerDetails={playerDetails}/>\r\n            </IonItem>)\r\n        }\r\n        </>\r\n    );\r\n}\r\n\r\nfunction WinnersCards(props : {playerDetails: PlayerDetails[], winnerIds: number[], playerId: number, gameWinner?: number, roomSeed: number})\r\n{\r\n    if (props.gameWinner !== undefined)\r\n    {\r\n        return (\r\n            <>\r\n                <InteractionCard>\r\n                    <PlayerCharacterName playerDetails={props.playerDetails[props.gameWinner]} /> wins the game!\r\n                </InteractionCard>\r\n                <InteractionCard>\r\n                    <Tokens wins={props.playerDetails[props.gameWinner].wins} seed={props.roomSeed + props.gameWinner! * 10} />\r\n                </InteractionCard>\r\n            </>\r\n        );\r\n    }\r\n\r\n    function handleNewRound()\r\n    {\r\n        clientApp.interactionStep();\r\n    }\r\n\r\n    return (\r\n        <>\r\n        {\r\n            props.winnerIds.map((id, index) =>\r\n                <React.Fragment key={id}>\r\n                    <InteractionCard>\r\n                        <PlayerCharacterName playerDetails={props.playerDetails[id]} /> wins the round!\r\n                    </InteractionCard>\r\n                    <InteractionCard>\r\n                        <Tokens wins={props.playerDetails[id].wins} seed={props.roomSeed + id * 10} />\r\n                        <br></br>\r\n                        {tokensToWinMap[props.playerDetails.length] - props.playerDetails[id].wins} more tokens needed to win\r\n                    </InteractionCard>\r\n                    { props.playerId === id ?\r\n                        <InteractionCard>\r\n                            <IonButton onClick={handleNewRound}>New round</IonButton>\r\n                        </InteractionCard> : null\r\n                    }\r\n                </React.Fragment>\r\n            )\r\n        }\r\n        </>\r\n    );\r\n}\r\n\r\nconst RoundCompletePage: React.FC = () => {\r\n\r\n    const [playerDetails, setPlayerDetails] = useState<PlayerDetails[]>(clientApp.getUiProperty(\"playerDetails\"));\r\n    const [playerId, setPlayerId] = useState<number>(clientApp.getUiProperty(\"playerId\"));\r\n    const [interaction, setInteraction] = useState<Interaction>(clientApp.getUiProperty(\"interaction\"));\r\n    const [roomSeed, setRoomSeed] = useState<number>(clientApp.getUiProperty(\"roomSeed\"));\r\n\r\n    useEffect(() => {\r\n        var listeners = new LVListenerList(\"roundComplete\");\r\n        listeners.onPropertyChange(\"playerDetails\", function(value : PlayerDetails[]) { setPlayerDetails(value); });\r\n        listeners.onPropertyChange(\"playerId\", function(value : number) { setPlayerId(value); });\r\n        listeners.onPropertyChange(\"interaction\", function(value : Interaction) { setInteraction(value); });\r\n        listeners.onPropertyChange(\"roomSeed\", function(value : number) { setRoomSeed(value); });\r\n        return clientApp.effectListeners(listeners);\r\n    }, []);\r\n\r\n    return (\r\n        <IonPage>\r\n            <IonContent fullscreen>\r\n                <IonHeader>\r\n                    <IonToolbar>\r\n                        <IonButtons slot=\"start\">\r\n                            <IonMenuButton />\r\n                        </IonButtons>\r\n                        <IonTitle>Round Complete</IonTitle>\r\n                    </IonToolbar>\r\n                </IonHeader>\r\n\r\n                { interaction.status !== \"ROUND_COMPLETE\" ? null :\r\n                    <>\r\n                        <InteractionCard>\r\n                            <IonList>\r\n                                <RoundEndPlayersList finalCards={interaction.finalCards || []} playerDetails={playerDetails}/>\r\n                            </IonList>\r\n                        </InteractionCard>\r\n                        <WinnersCards playerId={playerId} playerDetails={playerDetails} winnerIds={interaction.winnerIds || []} gameWinner={interaction.gameWinner} roomSeed={roomSeed}/>\r\n                    </>\r\n                }\r\n            </IonContent>\r\n        </IonPage>\r\n    );\r\n}\r\n\r\nexport default RoundCompletePage;","import Menu from './components/Menu';\nimport GameTabPage from './pages/GameTab';\nimport HelpPage from './pages/HelpPage';\nimport { InputExamples } from './pages/Page';\nimport PickCharacterPage from './pages/PickCharacterPage';\nimport { LoginPage } from './pages/LoginPage';\nimport React from 'react';\nimport { IonApp, IonRouterOutlet, IonSplitPane } from '@ionic/react';\nimport { IonReactRouter } from '@ionic/react-router';\nimport { Redirect, Route } from 'react-router-dom';\n\n/* Core CSS required for Ionic components to work properly */\nimport '@ionic/react/css/core.css';\n\n/* Basic CSS for apps built with Ionic */\nimport '@ionic/react/css/normalize.css';\nimport '@ionic/react/css/structure.css';\nimport '@ionic/react/css/typography.css';\n\n/* Optional CSS utils that can be commented out */\nimport '@ionic/react/css/padding.css';\nimport '@ionic/react/css/float-elements.css';\nimport '@ionic/react/css/text-alignment.css';\nimport '@ionic/react/css/text-transformation.css';\nimport '@ionic/react/css/flex-utils.css';\nimport '@ionic/react/css/display.css';\n\n/* Theme variables */\nimport './theme/variables.css';\nimport RoundCompletePage from './pages/RoundComplete';\n\nconst App: React.FC = () => {\n\n  return (\n    <IonApp>\n      <IonReactRouter>\n        <IonSplitPane contentId=\"main\">\n          <Menu />\n          <IonRouterOutlet id=\"main\">\n            <Route path=\"/tabs\" render={() => <GameTabPage />} />\n            <Route path=\"/page/Login\" component={LoginPage} exact />\n            <Route path=\"/page/PickCharacter\" component={PickCharacterPage} exact />\n            <Route path=\"/page/Help\" component={HelpPage} exact />\n            <Route path=\"/page/RoundComplete\" component={RoundCompletePage} exact />\n            <Route path=\"/page/Test\" component={InputExamples} exact />\n            <Redirect from=\"/\" to=\"/page/Login\" exact />\n          </IonRouterOutlet>\n        </IonSplitPane>\n      </IonReactRouter>\n    </IonApp>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}